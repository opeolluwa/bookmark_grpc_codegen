/**
 * @fileoverview gRPC-Web generated client stub for vault_entries
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.1
// source: proto/vault_entries.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_vault_entries_pb from '../proto/vault_entries_pb'; // proto import: "proto/vault_entries.proto"


export class VaultEntriesManagerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateNewVault = new grpcWeb.MethodDescriptor(
    '/vault_entries.VaultEntriesManager/CreateNewVault',
    grpcWeb.MethodType.UNARY,
    proto_vault_entries_pb.NewVaultEntryRequest,
    proto_vault_entries_pb.GetVaultEntryResponse,
    (request: proto_vault_entries_pb.NewVaultEntryRequest) => {
      return request.serializeBinary();
    },
    proto_vault_entries_pb.GetVaultEntryResponse.deserializeBinary
  );

  createNewVault(
    request: proto_vault_entries_pb.NewVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_vault_entries_pb.GetVaultEntryResponse>;

  createNewVault(
    request: proto_vault_entries_pb.NewVaultEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void): grpcWeb.ClientReadableStream<proto_vault_entries_pb.GetVaultEntryResponse>;

  createNewVault(
    request: proto_vault_entries_pb.NewVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/vault_entries.VaultEntriesManager/CreateNewVault',
        request,
        metadata || {},
        this.methodDescriptorCreateNewVault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/vault_entries.VaultEntriesManager/CreateNewVault',
    request,
    metadata || {},
    this.methodDescriptorCreateNewVault);
  }

  methodDescriptorGetVaultEntry = new grpcWeb.MethodDescriptor(
    '/vault_entries.VaultEntriesManager/GetVaultEntry',
    grpcWeb.MethodType.UNARY,
    proto_vault_entries_pb.GetVaultEntryRequest,
    proto_vault_entries_pb.GetVaultEntryResponse,
    (request: proto_vault_entries_pb.GetVaultEntryRequest) => {
      return request.serializeBinary();
    },
    proto_vault_entries_pb.GetVaultEntryResponse.deserializeBinary
  );

  getVaultEntry(
    request: proto_vault_entries_pb.GetVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_vault_entries_pb.GetVaultEntryResponse>;

  getVaultEntry(
    request: proto_vault_entries_pb.GetVaultEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void): grpcWeb.ClientReadableStream<proto_vault_entries_pb.GetVaultEntryResponse>;

  getVaultEntry(
    request: proto_vault_entries_pb.GetVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/vault_entries.VaultEntriesManager/GetVaultEntry',
        request,
        metadata || {},
        this.methodDescriptorGetVaultEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/vault_entries.VaultEntriesManager/GetVaultEntry',
    request,
    metadata || {},
    this.methodDescriptorGetVaultEntry);
  }

  methodDescriptorUpdateVaultEntry = new grpcWeb.MethodDescriptor(
    '/vault_entries.VaultEntriesManager/UpdateVaultEntry',
    grpcWeb.MethodType.UNARY,
    proto_vault_entries_pb.UpdateVaultEntryRequest,
    proto_vault_entries_pb.GetVaultEntryResponse,
    (request: proto_vault_entries_pb.UpdateVaultEntryRequest) => {
      return request.serializeBinary();
    },
    proto_vault_entries_pb.GetVaultEntryResponse.deserializeBinary
  );

  updateVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_vault_entries_pb.GetVaultEntryResponse>;

  updateVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void): grpcWeb.ClientReadableStream<proto_vault_entries_pb.GetVaultEntryResponse>;

  updateVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.GetVaultEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/vault_entries.VaultEntriesManager/UpdateVaultEntry',
        request,
        metadata || {},
        this.methodDescriptorUpdateVaultEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/vault_entries.VaultEntriesManager/UpdateVaultEntry',
    request,
    metadata || {},
    this.methodDescriptorUpdateVaultEntry);
  }

  methodDescriptorDeleteVaultEntry = new grpcWeb.MethodDescriptor(
    '/vault_entries.VaultEntriesManager/DeleteVaultEntry',
    grpcWeb.MethodType.UNARY,
    proto_vault_entries_pb.UpdateVaultEntryRequest,
    proto_vault_entries_pb.DeleteVaultEntryResponse,
    (request: proto_vault_entries_pb.UpdateVaultEntryRequest) => {
      return request.serializeBinary();
    },
    proto_vault_entries_pb.DeleteVaultEntryResponse.deserializeBinary
  );

  deleteVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_vault_entries_pb.DeleteVaultEntryResponse>;

  deleteVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.DeleteVaultEntryResponse) => void): grpcWeb.ClientReadableStream<proto_vault_entries_pb.DeleteVaultEntryResponse>;

  deleteVaultEntry(
    request: proto_vault_entries_pb.UpdateVaultEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_vault_entries_pb.DeleteVaultEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/vault_entries.VaultEntriesManager/DeleteVaultEntry',
        request,
        metadata || {},
        this.methodDescriptorDeleteVaultEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/vault_entries.VaultEntriesManager/DeleteVaultEntry',
    request,
    metadata || {},
    this.methodDescriptorDeleteVaultEntry);
  }

}

