// source: proto/bookmark_collections.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.BookmarkCollection.BookmarkCollection', null, global);
goog.exportSymbol('proto.BookmarkCollection.BookmarkCollectionEntries', null, global);
goog.exportSymbol('proto.BookmarkCollection.DeleteBookmarkCollectionRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.DeleteBookmarkCollectionResponse', null, global);
goog.exportSymbol('proto.BookmarkCollection.GetBookmarkCollectionRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.GetBookmarkCollectionResponse', null, global);
goog.exportSymbol('proto.BookmarkCollection.ListBookmarkCollectionEntryRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.ListBookmarkCollectionEntryResponse', null, global);
goog.exportSymbol('proto.BookmarkCollection.ListBookmarkCollectionsRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.ListBookmarkCollectionsResponse', null, global);
goog.exportSymbol('proto.BookmarkCollection.NewBookmarkCollectionRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.NewBookmarkCollectionResponse', null, global);
goog.exportSymbol('proto.BookmarkCollection.UpdateBookmarkCollectionRequest', null, global);
goog.exportSymbol('proto.BookmarkCollection.UpdateBookmarkCollectionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.BookmarkCollectionEntries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.BookmarkCollectionEntries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.BookmarkCollectionEntries.displayName = 'proto.BookmarkCollection.BookmarkCollectionEntries';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.NewBookmarkCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.NewBookmarkCollectionRequest.displayName = 'proto.BookmarkCollection.NewBookmarkCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.NewBookmarkCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.NewBookmarkCollectionResponse.displayName = 'proto.BookmarkCollection.NewBookmarkCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.GetBookmarkCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.GetBookmarkCollectionRequest.displayName = 'proto.BookmarkCollection.GetBookmarkCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BookmarkCollection.GetBookmarkCollectionResponse.repeatedFields_, null);
};
goog.inherits(proto.BookmarkCollection.GetBookmarkCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.GetBookmarkCollectionResponse.displayName = 'proto.BookmarkCollection.GetBookmarkCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.UpdateBookmarkCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.UpdateBookmarkCollectionRequest.displayName = 'proto.BookmarkCollection.UpdateBookmarkCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.UpdateBookmarkCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.UpdateBookmarkCollectionResponse.displayName = 'proto.BookmarkCollection.UpdateBookmarkCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.DeleteBookmarkCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.DeleteBookmarkCollectionRequest.displayName = 'proto.BookmarkCollection.DeleteBookmarkCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.DeleteBookmarkCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.DeleteBookmarkCollectionResponse.displayName = 'proto.BookmarkCollection.DeleteBookmarkCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.ListBookmarkCollectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.ListBookmarkCollectionsRequest.displayName = 'proto.BookmarkCollection.ListBookmarkCollectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.BookmarkCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.BookmarkCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.BookmarkCollection.displayName = 'proto.BookmarkCollection.BookmarkCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BookmarkCollection.ListBookmarkCollectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.BookmarkCollection.ListBookmarkCollectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.ListBookmarkCollectionsResponse.displayName = 'proto.BookmarkCollection.ListBookmarkCollectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BookmarkCollection.ListBookmarkCollectionEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.displayName = 'proto.BookmarkCollection.ListBookmarkCollectionEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.repeatedFields_, null);
};
goog.inherits(proto.BookmarkCollection.ListBookmarkCollectionEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.displayName = 'proto.BookmarkCollection.ListBookmarkCollectionEntryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.BookmarkCollectionEntries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.BookmarkCollectionEntries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.BookmarkCollectionEntries.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    moreFieldsMap: (f = msg.getMoreFieldsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.BookmarkCollectionEntries;
  return proto.BookmarkCollection.BookmarkCollectionEntries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.BookmarkCollectionEntries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 6:
      var value = msg.getMoreFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.BookmarkCollectionEntries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.BookmarkCollectionEntries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.BookmarkCollectionEntries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMoreFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string created_at = 3;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string updated_at = 4;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string BookmarkCollection_id = 5;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * map<string, string> more_fields = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.getMoreFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries} returns this
 */
proto.BookmarkCollection.BookmarkCollectionEntries.prototype.clearMoreFieldsMap = function() {
  this.getMoreFieldsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.NewBookmarkCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionRequest}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.NewBookmarkCollectionRequest;
  return proto.BookmarkCollection.NewBookmarkCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionRequest}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.NewBookmarkCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.NewBookmarkCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.NewBookmarkCollectionResponse;
  return proto.BookmarkCollection.NewBookmarkCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.NewBookmarkCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.NewBookmarkCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string created_at = 5;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_at = 6;
 * @return {string}
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.NewBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.NewBookmarkCollectionResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.GetBookmarkCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionRequest}
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.GetBookmarkCollectionRequest;
  return proto.BookmarkCollection.GetBookmarkCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionRequest}
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.GetBookmarkCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionRequest.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.GetBookmarkCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.BookmarkCollection.BookmarkCollectionEntries.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.GetBookmarkCollectionResponse;
  return proto.BookmarkCollection.GetBookmarkCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = new proto.BookmarkCollection.BookmarkCollectionEntries;
      reader.readMessage(value,proto.BookmarkCollection.BookmarkCollectionEntries.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.GetBookmarkCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.GetBookmarkCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.BookmarkCollection.BookmarkCollectionEntries.serializeBinaryToWriter
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated BookmarkCollectionEntries entries = 7;
 * @return {!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BookmarkCollection.BookmarkCollectionEntries, 7));
};


/**
 * @param {!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>} value
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
*/
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.BookmarkCollection.BookmarkCollectionEntries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries}
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.BookmarkCollection.BookmarkCollectionEntries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BookmarkCollection.GetBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.GetBookmarkCollectionResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.UpdateBookmarkCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.UpdateBookmarkCollectionRequest;
  return proto.BookmarkCollection.UpdateBookmarkCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.UpdateBookmarkCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.UpdateBookmarkCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.UpdateBookmarkCollectionResponse;
  return proto.BookmarkCollection.UpdateBookmarkCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.UpdateBookmarkCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.UpdateBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.UpdateBookmarkCollectionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.DeleteBookmarkCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.DeleteBookmarkCollectionRequest;
  return proto.BookmarkCollection.DeleteBookmarkCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.DeleteBookmarkCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionRequest} returns this
 */
proto.BookmarkCollection.DeleteBookmarkCollectionRequest.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.DeleteBookmarkCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.DeleteBookmarkCollectionResponse;
  return proto.BookmarkCollection.DeleteBookmarkCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.DeleteBookmarkCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.DeleteBookmarkCollectionResponse} returns this
 */
proto.BookmarkCollection.DeleteBookmarkCollectionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.ListBookmarkCollectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsRequest}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.ListBookmarkCollectionsRequest;
  return proto.BookmarkCollection.ListBookmarkCollectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsRequest}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.ListBookmarkCollectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 page = 1;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsRequest} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 page_size = 2;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsRequest} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.BookmarkCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.BookmarkCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.BookmarkCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.BookmarkCollection}
 */
proto.BookmarkCollection.BookmarkCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.BookmarkCollection;
  return proto.BookmarkCollection.BookmarkCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.BookmarkCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.BookmarkCollection}
 */
proto.BookmarkCollection.BookmarkCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.BookmarkCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.BookmarkCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.BookmarkCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollection} returns this
 */
proto.BookmarkCollection.BookmarkCollection.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollection} returns this
 */
proto.BookmarkCollection.BookmarkCollection.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollection} returns this
 */
proto.BookmarkCollection.BookmarkCollection.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollection} returns this
 */
proto.BookmarkCollection.BookmarkCollection.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.BookmarkCollection.BookmarkCollection.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.BookmarkCollection} returns this
 */
proto.BookmarkCollection.BookmarkCollection.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.ListBookmarkCollectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionsList: jspb.Message.toObjectList(msg.getBookmarkcollectionsList(),
    proto.BookmarkCollection.BookmarkCollection.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsResponse}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.ListBookmarkCollectionsResponse;
  return proto.BookmarkCollection.ListBookmarkCollectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsResponse}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.BookmarkCollection.BookmarkCollection;
      reader.readMessage(value,proto.BookmarkCollection.BookmarkCollection.deserializeBinaryFromReader);
      msg.addBookmarkcollections(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.ListBookmarkCollectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.BookmarkCollection.BookmarkCollection.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated BookmarkCollection BookmarkCollections = 1;
 * @return {!Array<!proto.BookmarkCollection.BookmarkCollection>}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.getBookmarkcollectionsList = function() {
  return /** @type{!Array<!proto.BookmarkCollection.BookmarkCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BookmarkCollection.BookmarkCollection, 1));
};


/**
 * @param {!Array<!proto.BookmarkCollection.BookmarkCollection>} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} returns this
*/
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.setBookmarkcollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.BookmarkCollection.BookmarkCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BookmarkCollection.BookmarkCollection}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.addBookmarkcollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BookmarkCollection.BookmarkCollection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.clearBookmarkcollectionsList = function() {
  return this.setBookmarkcollectionsList([]);
};


/**
 * optional uint32 total_count = 2;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionsResponse} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.ListBookmarkCollectionEntryRequest;
  return proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmarkcollectionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string BookmarkCollection_id = 1;
 * @return {string}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.getBookmarkcollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.setBookmarkcollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 page = 4;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 page_size = 5;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryRequest} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookmarkcollectionEntriesList: jspb.Message.toObjectList(msg.getBookmarkcollectionEntriesList(),
    proto.BookmarkCollection.BookmarkCollectionEntries.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BookmarkCollection.ListBookmarkCollectionEntryResponse;
  return proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.BookmarkCollection.BookmarkCollectionEntries;
      reader.readMessage(value,proto.BookmarkCollection.BookmarkCollectionEntries.deserializeBinaryFromReader);
      msg.addBookmarkcollectionEntries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookmarkcollectionEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.BookmarkCollection.BookmarkCollectionEntries.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated BookmarkCollectionEntries BookmarkCollection_entries = 1;
 * @return {!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.getBookmarkcollectionEntriesList = function() {
  return /** @type{!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BookmarkCollection.BookmarkCollectionEntries, 1));
};


/**
 * @param {!Array<!proto.BookmarkCollection.BookmarkCollectionEntries>} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} returns this
*/
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.setBookmarkcollectionEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.BookmarkCollection.BookmarkCollectionEntries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BookmarkCollection.BookmarkCollectionEntries}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.addBookmarkcollectionEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.BookmarkCollection.BookmarkCollectionEntries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.clearBookmarkcollectionEntriesList = function() {
  return this.setBookmarkcollectionEntriesList([]);
};


/**
 * optional uint32 total_count = 2;
 * @return {number}
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BookmarkCollection.ListBookmarkCollectionEntryResponse} returns this
 */
proto.BookmarkCollection.ListBookmarkCollectionEntryResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.BookmarkCollection);
