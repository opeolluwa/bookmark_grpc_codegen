/**
 * @fileoverview gRPC-Web generated client stub for bookmark_collections_entries
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.1
// source: proto/bookmark_collection_entries.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_bookmark_collection_entries_pb from '../proto/bookmark_collection_entries_pb'; // proto import: "proto/bookmark_collection_entries.proto"


export class BookmarkCollectionsEntriesManagerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateNewBookmarkCollectionEntry = new grpcWeb.MethodDescriptor(
    '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/CreateNewBookmarkCollectionEntry',
    grpcWeb.MethodType.UNARY,
    proto_bookmark_collection_entries_pb.NewBookmarkCollectionsEntryRequest,
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse,
    (request: proto_bookmark_collection_entries_pb.NewBookmarkCollectionsEntryRequest) => {
      return request.serializeBinary();
    },
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse.deserializeBinary
  );

  createNewBookmarkCollectionEntry(
    request: proto_bookmark_collection_entries_pb.NewBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  createNewBookmarkCollectionEntry(
    request: proto_bookmark_collection_entries_pb.NewBookmarkCollectionsEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void): grpcWeb.ClientReadableStream<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  createNewBookmarkCollectionEntry(
    request: proto_bookmark_collection_entries_pb.NewBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/CreateNewBookmarkCollectionEntry',
        request,
        metadata || {},
        this.methodDescriptorCreateNewBookmarkCollectionEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/CreateNewBookmarkCollectionEntry',
    request,
    metadata || {},
    this.methodDescriptorCreateNewBookmarkCollectionEntry);
  }

  methodDescriptorGetBookmarkCollectionsEntry = new grpcWeb.MethodDescriptor(
    '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/GetBookmarkCollectionsEntry',
    grpcWeb.MethodType.UNARY,
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryRequest,
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse,
    (request: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryRequest) => {
      return request.serializeBinary();
    },
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse.deserializeBinary
  );

  getBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  getBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void): grpcWeb.ClientReadableStream<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  getBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/GetBookmarkCollectionsEntry',
        request,
        metadata || {},
        this.methodDescriptorGetBookmarkCollectionsEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/GetBookmarkCollectionsEntry',
    request,
    metadata || {},
    this.methodDescriptorGetBookmarkCollectionsEntry);
  }

  methodDescriptorUpdateBookmarkCollectionsEntry = new grpcWeb.MethodDescriptor(
    '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/UpdateBookmarkCollectionsEntry',
    grpcWeb.MethodType.UNARY,
    proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse,
    (request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest) => {
      return request.serializeBinary();
    },
    proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse.deserializeBinary
  );

  updateBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  updateBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void): grpcWeb.ClientReadableStream<proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse>;

  updateBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.GetBookmarkCollectionsEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/UpdateBookmarkCollectionsEntry',
        request,
        metadata || {},
        this.methodDescriptorUpdateBookmarkCollectionsEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/UpdateBookmarkCollectionsEntry',
    request,
    metadata || {},
    this.methodDescriptorUpdateBookmarkCollectionsEntry);
  }

  methodDescriptorDeleteBookmarkCollectionsEntry = new grpcWeb.MethodDescriptor(
    '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/DeleteBookmarkCollectionsEntry',
    grpcWeb.MethodType.UNARY,
    proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse,
    (request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest) => {
      return request.serializeBinary();
    },
    proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse.deserializeBinary
  );

  deleteBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse>;

  deleteBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse) => void): grpcWeb.ClientReadableStream<proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse>;

  deleteBookmarkCollectionsEntry(
    request: proto_bookmark_collection_entries_pb.UpdateBookmarkCollectionsEntryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_bookmark_collection_entries_pb.DeleteBookmarkCollectionsEntryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/DeleteBookmarkCollectionsEntry',
        request,
        metadata || {},
        this.methodDescriptorDeleteBookmarkCollectionsEntry,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/bookmark_collections_entries.BookmarkCollectionsEntriesManager/DeleteBookmarkCollectionsEntry',
    request,
    metadata || {},
    this.methodDescriptorDeleteBookmarkCollectionsEntry);
  }

}

