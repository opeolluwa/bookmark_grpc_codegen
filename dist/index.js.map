{"version":3,"sources":["../protogen/nodejs/index.ts","../protogen/nodejs/activity.ts","../protogen/nodejs/authentication.ts","../protogen/nodejs/bookmark_collection_entries.ts","../protogen/nodejs/bookmark_collections.ts","../protogen/nodejs/common.ts","../protogen/nodejs/health_check.ts","../protogen/nodejs/user_profile.ts"],"sourcesContent":["// Auto-generated index.ts\nexport * as activity from './activity';\nexport * as authentication from './authentication';\nexport * as bookmark_collection_entries from './bookmark_collection_entries';\nexport * as bookmark_collections from './bookmark_collections';\nexport * as common from './common';\nexport * as health_check from './health_check';\nexport * as user_profile from './user_profile';\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: activity.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"activity_log\";\n\nexport enum Status {\n  Success = 0,\n  Failed = 1,\n  UNRECOGNIZED = -1,\n}\n\nexport function statusFromJSON(object: any): Status {\n  switch (object) {\n    case 0:\n    case \"Success\":\n      return Status.Success;\n    case 1:\n    case \"Failed\":\n      return Status.Failed;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Status.UNRECOGNIZED;\n  }\n}\n\nexport function statusToJSON(object: Status): string {\n  switch (object) {\n    case Status.Success:\n      return \"Success\";\n    case Status.Failed:\n      return \"Failed\";\n    case Status.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\nexport interface LogActivityRequest {\n  location: string;\n  time: string;\n  date: string;\n  os: string;\n  action: string;\n}\n\nexport interface LogActivityResponse {\n  status: Status;\n  message?: string | undefined;\n}\n\nfunction createBaseLogActivityRequest(): LogActivityRequest {\n  return { location: \"\", time: \"\", date: \"\", os: \"\", action: \"\" };\n}\n\nexport const LogActivityRequest: MessageFns<LogActivityRequest> = {\n  encode(message: LogActivityRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.location !== \"\") {\n      writer.uint32(10).string(message.location);\n    }\n    if (message.time !== \"\") {\n      writer.uint32(18).string(message.time);\n    }\n    if (message.date !== \"\") {\n      writer.uint32(26).string(message.date);\n    }\n    if (message.os !== \"\") {\n      writer.uint32(34).string(message.os);\n    }\n    if (message.action !== \"\") {\n      writer.uint32(42).string(message.action);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): LogActivityRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLogActivityRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.location = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.time = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.date = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.os = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.action = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LogActivityRequest {\n    return {\n      location: isSet(object.location) ? globalThis.String(object.location) : \"\",\n      time: isSet(object.time) ? globalThis.String(object.time) : \"\",\n      date: isSet(object.date) ? globalThis.String(object.date) : \"\",\n      os: isSet(object.os) ? globalThis.String(object.os) : \"\",\n      action: isSet(object.action) ? globalThis.String(object.action) : \"\",\n    };\n  },\n\n  toJSON(message: LogActivityRequest): unknown {\n    const obj: any = {};\n    if (message.location !== \"\") {\n      obj.location = message.location;\n    }\n    if (message.time !== \"\") {\n      obj.time = message.time;\n    }\n    if (message.date !== \"\") {\n      obj.date = message.date;\n    }\n    if (message.os !== \"\") {\n      obj.os = message.os;\n    }\n    if (message.action !== \"\") {\n      obj.action = message.action;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<LogActivityRequest>, I>>(base?: I): LogActivityRequest {\n    return LogActivityRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<LogActivityRequest>, I>>(object: I): LogActivityRequest {\n    const message = createBaseLogActivityRequest();\n    message.location = object.location ?? \"\";\n    message.time = object.time ?? \"\";\n    message.date = object.date ?? \"\";\n    message.os = object.os ?? \"\";\n    message.action = object.action ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseLogActivityResponse(): LogActivityResponse {\n  return { status: 0, message: undefined };\n}\n\nexport const LogActivityResponse: MessageFns<LogActivityResponse> = {\n  encode(message: LogActivityResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.status !== 0) {\n      writer.uint32(8).int32(message.status);\n    }\n    if (message.message !== undefined) {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): LogActivityResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLogActivityResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.status = reader.int32() as any;\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LogActivityResponse {\n    return {\n      status: isSet(object.status) ? statusFromJSON(object.status) : 0,\n      message: isSet(object.message) ? globalThis.String(object.message) : undefined,\n    };\n  },\n\n  toJSON(message: LogActivityResponse): unknown {\n    const obj: any = {};\n    if (message.status !== 0) {\n      obj.status = statusToJSON(message.status);\n    }\n    if (message.message !== undefined) {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<LogActivityResponse>, I>>(base?: I): LogActivityResponse {\n    return LogActivityResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<LogActivityResponse>, I>>(object: I): LogActivityResponse {\n    const message = createBaseLogActivityResponse();\n    message.status = object.status ?? 0;\n    message.message = object.message ?? undefined;\n    return message;\n  },\n};\n\nexport type ActivityLogService = typeof ActivityLogService;\nexport const ActivityLogService = {\n  logActivity: {\n    path: \"/activity_log.ActivityLog/LogActivity\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: LogActivityRequest) => Buffer.from(LogActivityRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => LogActivityRequest.decode(value),\n    responseSerialize: (value: LogActivityResponse) => Buffer.from(LogActivityResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => LogActivityResponse.decode(value),\n  },\n} as const;\n\nexport interface ActivityLogServer extends UntypedServiceImplementation {\n  logActivity: handleUnaryCall<LogActivityRequest, LogActivityResponse>;\n}\n\nexport interface ActivityLogClient extends Client {\n  logActivity(\n    request: LogActivityRequest,\n    callback: (error: ServiceError | null, response: LogActivityResponse) => void,\n  ): ClientUnaryCall;\n  logActivity(\n    request: LogActivityRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: LogActivityResponse) => void,\n  ): ClientUnaryCall;\n  logActivity(\n    request: LogActivityRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: LogActivityResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const ActivityLogClient = makeGenericClientConstructor(\n  ActivityLogService,\n  \"activity_log.ActivityLog\",\n) as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): ActivityLogClient;\n  service: typeof ActivityLogService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: authentication.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"authentication\";\n\nexport enum Status {\n  Ok = 0,\n  Bad = 1,\n  UNRECOGNIZED = -1,\n}\n\nexport function statusFromJSON(object: any): Status {\n  switch (object) {\n    case 0:\n    case \"Ok\":\n      return Status.Ok;\n    case 1:\n    case \"Bad\":\n      return Status.Bad;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Status.UNRECOGNIZED;\n  }\n}\n\nexport function statusToJSON(object: Status): string {\n  switch (object) {\n    case Status.Ok:\n      return \"Ok\";\n    case Status.Bad:\n      return \"Bad\";\n    case Status.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  message: string;\n}\n\nexport interface SignUpRequest {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface SignUpResponse {\n  message: string;\n  status: Status;\n}\n\nfunction createBaseLoginRequest(): LoginRequest {\n  return { email: \"\", password: \"\" };\n}\n\nexport const LoginRequest: MessageFns<LoginRequest> = {\n  encode(message: LoginRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.email !== \"\") {\n      writer.uint32(10).string(message.email);\n    }\n    if (message.password !== \"\") {\n      writer.uint32(18).string(message.password);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): LoginRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLoginRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.email = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.password = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LoginRequest {\n    return {\n      email: isSet(object.email) ? globalThis.String(object.email) : \"\",\n      password: isSet(object.password) ? globalThis.String(object.password) : \"\",\n    };\n  },\n\n  toJSON(message: LoginRequest): unknown {\n    const obj: any = {};\n    if (message.email !== \"\") {\n      obj.email = message.email;\n    }\n    if (message.password !== \"\") {\n      obj.password = message.password;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<LoginRequest>, I>>(base?: I): LoginRequest {\n    return LoginRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<LoginRequest>, I>>(object: I): LoginRequest {\n    const message = createBaseLoginRequest();\n    message.email = object.email ?? \"\";\n    message.password = object.password ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseLoginResponse(): LoginResponse {\n  return { token: \"\", message: \"\" };\n}\n\nexport const LoginResponse: MessageFns<LoginResponse> = {\n  encode(message: LoginResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.token !== \"\") {\n      writer.uint32(10).string(message.token);\n    }\n    if (message.message !== \"\") {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): LoginResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLoginResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.token = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LoginResponse {\n    return {\n      token: isSet(object.token) ? globalThis.String(object.token) : \"\",\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n    };\n  },\n\n  toJSON(message: LoginResponse): unknown {\n    const obj: any = {};\n    if (message.token !== \"\") {\n      obj.token = message.token;\n    }\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<LoginResponse>, I>>(base?: I): LoginResponse {\n    return LoginResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<LoginResponse>, I>>(object: I): LoginResponse {\n    const message = createBaseLoginResponse();\n    message.token = object.token ?? \"\";\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseSignUpRequest(): SignUpRequest {\n  return { email: \"\", password: \"\", firstName: \"\", lastName: \"\" };\n}\n\nexport const SignUpRequest: MessageFns<SignUpRequest> = {\n  encode(message: SignUpRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.email !== \"\") {\n      writer.uint32(10).string(message.email);\n    }\n    if (message.password !== \"\") {\n      writer.uint32(18).string(message.password);\n    }\n    if (message.firstName !== \"\") {\n      writer.uint32(26).string(message.firstName);\n    }\n    if (message.lastName !== \"\") {\n      writer.uint32(34).string(message.lastName);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SignUpRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignUpRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.email = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.password = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.firstName = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.lastName = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignUpRequest {\n    return {\n      email: isSet(object.email) ? globalThis.String(object.email) : \"\",\n      password: isSet(object.password) ? globalThis.String(object.password) : \"\",\n      firstName: isSet(object.firstName) ? globalThis.String(object.firstName) : \"\",\n      lastName: isSet(object.lastName) ? globalThis.String(object.lastName) : \"\",\n    };\n  },\n\n  toJSON(message: SignUpRequest): unknown {\n    const obj: any = {};\n    if (message.email !== \"\") {\n      obj.email = message.email;\n    }\n    if (message.password !== \"\") {\n      obj.password = message.password;\n    }\n    if (message.firstName !== \"\") {\n      obj.firstName = message.firstName;\n    }\n    if (message.lastName !== \"\") {\n      obj.lastName = message.lastName;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SignUpRequest>, I>>(base?: I): SignUpRequest {\n    return SignUpRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SignUpRequest>, I>>(object: I): SignUpRequest {\n    const message = createBaseSignUpRequest();\n    message.email = object.email ?? \"\";\n    message.password = object.password ?? \"\";\n    message.firstName = object.firstName ?? \"\";\n    message.lastName = object.lastName ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseSignUpResponse(): SignUpResponse {\n  return { message: \"\", status: 0 };\n}\n\nexport const SignUpResponse: MessageFns<SignUpResponse> = {\n  encode(message: SignUpResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    if (message.status !== 0) {\n      writer.uint32(16).int32(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SignUpResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignUpResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.status = reader.int32() as any;\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignUpResponse {\n    return {\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n      status: isSet(object.status) ? statusFromJSON(object.status) : 0,\n    };\n  },\n\n  toJSON(message: SignUpResponse): unknown {\n    const obj: any = {};\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    if (message.status !== 0) {\n      obj.status = statusToJSON(message.status);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SignUpResponse>, I>>(base?: I): SignUpResponse {\n    return SignUpResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SignUpResponse>, I>>(object: I): SignUpResponse {\n    const message = createBaseSignUpResponse();\n    message.message = object.message ?? \"\";\n    message.status = object.status ?? 0;\n    return message;\n  },\n};\n\nexport type AuthenticationService = typeof AuthenticationService;\nexport const AuthenticationService = {\n  signUp: {\n    path: \"/authentication.Authentication/SignUp\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: SignUpRequest) => Buffer.from(SignUpRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => SignUpRequest.decode(value),\n    responseSerialize: (value: SignUpResponse) => Buffer.from(SignUpResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => SignUpResponse.decode(value),\n  },\n  login: {\n    path: \"/authentication.Authentication/Login\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: LoginRequest) => Buffer.from(LoginRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => LoginRequest.decode(value),\n    responseSerialize: (value: LoginResponse) => Buffer.from(LoginResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => LoginResponse.decode(value),\n  },\n} as const;\n\nexport interface AuthenticationServer extends UntypedServiceImplementation {\n  signUp: handleUnaryCall<SignUpRequest, SignUpResponse>;\n  login: handleUnaryCall<LoginRequest, LoginResponse>;\n}\n\nexport interface AuthenticationClient extends Client {\n  signUp(\n    request: SignUpRequest,\n    callback: (error: ServiceError | null, response: SignUpResponse) => void,\n  ): ClientUnaryCall;\n  signUp(\n    request: SignUpRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: SignUpResponse) => void,\n  ): ClientUnaryCall;\n  signUp(\n    request: SignUpRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: SignUpResponse) => void,\n  ): ClientUnaryCall;\n  login(\n    request: LoginRequest,\n    callback: (error: ServiceError | null, response: LoginResponse) => void,\n  ): ClientUnaryCall;\n  login(\n    request: LoginRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: LoginResponse) => void,\n  ): ClientUnaryCall;\n  login(\n    request: LoginRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: LoginResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const AuthenticationClient = makeGenericClientConstructor(\n  AuthenticationService,\n  \"authentication.Authentication\",\n) as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): AuthenticationClient;\n  service: typeof AuthenticationService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: bookmark_collection_entries.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"bookmark_collections_entries\";\n\nexport interface NewBookmarkCollectionsEntryRequest {\n  title: string;\n  description: string;\n  bookmarkCollectionId: string;\n  moreFields: { [key: string]: string };\n}\n\nexport interface NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface GetBookmarkCollectionsEntryResponse {\n  title: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  collectionId: string;\n  moreFields: { [key: string]: string };\n  entryId: string;\n}\n\nexport interface GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface GetBookmarkCollectionsEntryRequest {\n  collectionId: string;\n  entryId: string;\n}\n\nexport interface UpdateBookmarkCollectionsEntryRequest {\n  collectionId: string;\n  title?: string | undefined;\n  description?: string | undefined;\n  entryId: string;\n}\n\nexport interface DeleteBookmarkCollectionsEntryResponse {\n  collectionId: string;\n  entryId: string;\n  status: string;\n}\n\nfunction createBaseNewBookmarkCollectionsEntryRequest(): NewBookmarkCollectionsEntryRequest {\n  return { title: \"\", description: \"\", bookmarkCollectionId: \"\", moreFields: {} };\n}\n\nexport const NewBookmarkCollectionsEntryRequest: MessageFns<NewBookmarkCollectionsEntryRequest> = {\n  encode(message: NewBookmarkCollectionsEntryRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.bookmarkCollectionId !== \"\") {\n      writer.uint32(26).string(message.bookmarkCollectionId);\n    }\n    Object.entries(message.moreFields).forEach(([key, value]) => {\n      NewBookmarkCollectionsEntryRequest_MoreFieldsEntry.encode({ key: key as any, value }, writer.uint32(34).fork())\n        .join();\n    });\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): NewBookmarkCollectionsEntryRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseNewBookmarkCollectionsEntryRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.bookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          const entry4 = NewBookmarkCollectionsEntryRequest_MoreFieldsEntry.decode(reader, reader.uint32());\n          if (entry4.value !== undefined) {\n            message.moreFields[entry4.key] = entry4.value;\n          }\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): NewBookmarkCollectionsEntryRequest {\n    return {\n      title: isSet(object.title) ? globalThis.String(object.title) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      bookmarkCollectionId: isSet(object.bookmarkCollectionId) ? globalThis.String(object.bookmarkCollectionId) : \"\",\n      moreFields: isObject(object.moreFields)\n        ? Object.entries(object.moreFields).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n          acc[key] = String(value);\n          return acc;\n        }, {})\n        : {},\n    };\n  },\n\n  toJSON(message: NewBookmarkCollectionsEntryRequest): unknown {\n    const obj: any = {};\n    if (message.title !== \"\") {\n      obj.title = message.title;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.bookmarkCollectionId !== \"\") {\n      obj.bookmarkCollectionId = message.bookmarkCollectionId;\n    }\n    if (message.moreFields) {\n      const entries = Object.entries(message.moreFields);\n      if (entries.length > 0) {\n        obj.moreFields = {};\n        entries.forEach(([k, v]) => {\n          obj.moreFields[k] = v;\n        });\n      }\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<NewBookmarkCollectionsEntryRequest>, I>>(\n    base?: I,\n  ): NewBookmarkCollectionsEntryRequest {\n    return NewBookmarkCollectionsEntryRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<NewBookmarkCollectionsEntryRequest>, I>>(\n    object: I,\n  ): NewBookmarkCollectionsEntryRequest {\n    const message = createBaseNewBookmarkCollectionsEntryRequest();\n    message.title = object.title ?? \"\";\n    message.description = object.description ?? \"\";\n    message.bookmarkCollectionId = object.bookmarkCollectionId ?? \"\";\n    message.moreFields = Object.entries(object.moreFields ?? {}).reduce<{ [key: string]: string }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = globalThis.String(value);\n        }\n        return acc;\n      },\n      {},\n    );\n    return message;\n  },\n};\n\nfunction createBaseNewBookmarkCollectionsEntryRequest_MoreFieldsEntry(): NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const NewBookmarkCollectionsEntryRequest_MoreFieldsEntry: MessageFns<\n  NewBookmarkCollectionsEntryRequest_MoreFieldsEntry\n> = {\n  encode(\n    message: NewBookmarkCollectionsEntryRequest_MoreFieldsEntry,\n    writer: BinaryWriter = new BinaryWriter(),\n  ): BinaryWriter {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseNewBookmarkCollectionsEntryRequest_MoreFieldsEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n    return {\n      key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n      value: isSet(object.value) ? globalThis.String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: NewBookmarkCollectionsEntryRequest_MoreFieldsEntry): unknown {\n    const obj: any = {};\n    if (message.key !== \"\") {\n      obj.key = message.key;\n    }\n    if (message.value !== \"\") {\n      obj.value = message.value;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<NewBookmarkCollectionsEntryRequest_MoreFieldsEntry>, I>>(\n    base?: I,\n  ): NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n    return NewBookmarkCollectionsEntryRequest_MoreFieldsEntry.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<NewBookmarkCollectionsEntryRequest_MoreFieldsEntry>, I>>(\n    object: I,\n  ): NewBookmarkCollectionsEntryRequest_MoreFieldsEntry {\n    const message = createBaseNewBookmarkCollectionsEntryRequest_MoreFieldsEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBookmarkCollectionsEntryResponse(): GetBookmarkCollectionsEntryResponse {\n  return { title: \"\", description: \"\", createdAt: \"\", updatedAt: \"\", collectionId: \"\", moreFields: {}, entryId: \"\" };\n}\n\nexport const GetBookmarkCollectionsEntryResponse: MessageFns<GetBookmarkCollectionsEntryResponse> = {\n  encode(message: GetBookmarkCollectionsEntryResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(26).string(message.createdAt);\n    }\n    if (message.updatedAt !== \"\") {\n      writer.uint32(34).string(message.updatedAt);\n    }\n    if (message.collectionId !== \"\") {\n      writer.uint32(42).string(message.collectionId);\n    }\n    Object.entries(message.moreFields).forEach(([key, value]) => {\n      GetBookmarkCollectionsEntryResponse_MoreFieldsEntry.encode({ key: key as any, value }, writer.uint32(50).fork())\n        .join();\n    });\n    if (message.entryId !== \"\") {\n      writer.uint32(66).string(message.entryId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetBookmarkCollectionsEntryResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBookmarkCollectionsEntryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.updatedAt = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.collectionId = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          const entry6 = GetBookmarkCollectionsEntryResponse_MoreFieldsEntry.decode(reader, reader.uint32());\n          if (entry6.value !== undefined) {\n            message.moreFields[entry6.key] = entry6.value;\n          }\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.entryId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetBookmarkCollectionsEntryResponse {\n    return {\n      title: isSet(object.title) ? globalThis.String(object.title) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      updatedAt: isSet(object.updatedAt) ? globalThis.String(object.updatedAt) : \"\",\n      collectionId: isSet(object.collectionId) ? globalThis.String(object.collectionId) : \"\",\n      moreFields: isObject(object.moreFields)\n        ? Object.entries(object.moreFields).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n          acc[key] = String(value);\n          return acc;\n        }, {})\n        : {},\n      entryId: isSet(object.entryId) ? globalThis.String(object.entryId) : \"\",\n    };\n  },\n\n  toJSON(message: GetBookmarkCollectionsEntryResponse): unknown {\n    const obj: any = {};\n    if (message.title !== \"\") {\n      obj.title = message.title;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.updatedAt !== \"\") {\n      obj.updatedAt = message.updatedAt;\n    }\n    if (message.collectionId !== \"\") {\n      obj.collectionId = message.collectionId;\n    }\n    if (message.moreFields) {\n      const entries = Object.entries(message.moreFields);\n      if (entries.length > 0) {\n        obj.moreFields = {};\n        entries.forEach(([k, v]) => {\n          obj.moreFields[k] = v;\n        });\n      }\n    }\n    if (message.entryId !== \"\") {\n      obj.entryId = message.entryId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryResponse>, I>>(\n    base?: I,\n  ): GetBookmarkCollectionsEntryResponse {\n    return GetBookmarkCollectionsEntryResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryResponse>, I>>(\n    object: I,\n  ): GetBookmarkCollectionsEntryResponse {\n    const message = createBaseGetBookmarkCollectionsEntryResponse();\n    message.title = object.title ?? \"\";\n    message.description = object.description ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.updatedAt = object.updatedAt ?? \"\";\n    message.collectionId = object.collectionId ?? \"\";\n    message.moreFields = Object.entries(object.moreFields ?? {}).reduce<{ [key: string]: string }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = globalThis.String(value);\n        }\n        return acc;\n      },\n      {},\n    );\n    message.entryId = object.entryId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBookmarkCollectionsEntryResponse_MoreFieldsEntry(): GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const GetBookmarkCollectionsEntryResponse_MoreFieldsEntry: MessageFns<\n  GetBookmarkCollectionsEntryResponse_MoreFieldsEntry\n> = {\n  encode(\n    message: GetBookmarkCollectionsEntryResponse_MoreFieldsEntry,\n    writer: BinaryWriter = new BinaryWriter(),\n  ): BinaryWriter {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBookmarkCollectionsEntryResponse_MoreFieldsEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n    return {\n      key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n      value: isSet(object.value) ? globalThis.String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: GetBookmarkCollectionsEntryResponse_MoreFieldsEntry): unknown {\n    const obj: any = {};\n    if (message.key !== \"\") {\n      obj.key = message.key;\n    }\n    if (message.value !== \"\") {\n      obj.value = message.value;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryResponse_MoreFieldsEntry>, I>>(\n    base?: I,\n  ): GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n    return GetBookmarkCollectionsEntryResponse_MoreFieldsEntry.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryResponse_MoreFieldsEntry>, I>>(\n    object: I,\n  ): GetBookmarkCollectionsEntryResponse_MoreFieldsEntry {\n    const message = createBaseGetBookmarkCollectionsEntryResponse_MoreFieldsEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBookmarkCollectionsEntryRequest(): GetBookmarkCollectionsEntryRequest {\n  return { collectionId: \"\", entryId: \"\" };\n}\n\nexport const GetBookmarkCollectionsEntryRequest: MessageFns<GetBookmarkCollectionsEntryRequest> = {\n  encode(message: GetBookmarkCollectionsEntryRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.collectionId !== \"\") {\n      writer.uint32(10).string(message.collectionId);\n    }\n    if (message.entryId !== \"\") {\n      writer.uint32(18).string(message.entryId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetBookmarkCollectionsEntryRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBookmarkCollectionsEntryRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.collectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.entryId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetBookmarkCollectionsEntryRequest {\n    return {\n      collectionId: isSet(object.collectionId) ? globalThis.String(object.collectionId) : \"\",\n      entryId: isSet(object.entryId) ? globalThis.String(object.entryId) : \"\",\n    };\n  },\n\n  toJSON(message: GetBookmarkCollectionsEntryRequest): unknown {\n    const obj: any = {};\n    if (message.collectionId !== \"\") {\n      obj.collectionId = message.collectionId;\n    }\n    if (message.entryId !== \"\") {\n      obj.entryId = message.entryId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryRequest>, I>>(\n    base?: I,\n  ): GetBookmarkCollectionsEntryRequest {\n    return GetBookmarkCollectionsEntryRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetBookmarkCollectionsEntryRequest>, I>>(\n    object: I,\n  ): GetBookmarkCollectionsEntryRequest {\n    const message = createBaseGetBookmarkCollectionsEntryRequest();\n    message.collectionId = object.collectionId ?? \"\";\n    message.entryId = object.entryId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseUpdateBookmarkCollectionsEntryRequest(): UpdateBookmarkCollectionsEntryRequest {\n  return { collectionId: \"\", title: undefined, description: undefined, entryId: \"\" };\n}\n\nexport const UpdateBookmarkCollectionsEntryRequest: MessageFns<UpdateBookmarkCollectionsEntryRequest> = {\n  encode(message: UpdateBookmarkCollectionsEntryRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.collectionId !== \"\") {\n      writer.uint32(10).string(message.collectionId);\n    }\n    if (message.title !== undefined) {\n      writer.uint32(18).string(message.title);\n    }\n    if (message.description !== undefined) {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.entryId !== \"\") {\n      writer.uint32(34).string(message.entryId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UpdateBookmarkCollectionsEntryRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpdateBookmarkCollectionsEntryRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.collectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.entryId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpdateBookmarkCollectionsEntryRequest {\n    return {\n      collectionId: isSet(object.collectionId) ? globalThis.String(object.collectionId) : \"\",\n      title: isSet(object.title) ? globalThis.String(object.title) : undefined,\n      description: isSet(object.description) ? globalThis.String(object.description) : undefined,\n      entryId: isSet(object.entryId) ? globalThis.String(object.entryId) : \"\",\n    };\n  },\n\n  toJSON(message: UpdateBookmarkCollectionsEntryRequest): unknown {\n    const obj: any = {};\n    if (message.collectionId !== \"\") {\n      obj.collectionId = message.collectionId;\n    }\n    if (message.title !== undefined) {\n      obj.title = message.title;\n    }\n    if (message.description !== undefined) {\n      obj.description = message.description;\n    }\n    if (message.entryId !== \"\") {\n      obj.entryId = message.entryId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<UpdateBookmarkCollectionsEntryRequest>, I>>(\n    base?: I,\n  ): UpdateBookmarkCollectionsEntryRequest {\n    return UpdateBookmarkCollectionsEntryRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UpdateBookmarkCollectionsEntryRequest>, I>>(\n    object: I,\n  ): UpdateBookmarkCollectionsEntryRequest {\n    const message = createBaseUpdateBookmarkCollectionsEntryRequest();\n    message.collectionId = object.collectionId ?? \"\";\n    message.title = object.title ?? undefined;\n    message.description = object.description ?? undefined;\n    message.entryId = object.entryId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDeleteBookmarkCollectionsEntryResponse(): DeleteBookmarkCollectionsEntryResponse {\n  return { collectionId: \"\", entryId: \"\", status: \"\" };\n}\n\nexport const DeleteBookmarkCollectionsEntryResponse: MessageFns<DeleteBookmarkCollectionsEntryResponse> = {\n  encode(message: DeleteBookmarkCollectionsEntryResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.collectionId !== \"\") {\n      writer.uint32(10).string(message.collectionId);\n    }\n    if (message.entryId !== \"\") {\n      writer.uint32(18).string(message.entryId);\n    }\n    if (message.status !== \"\") {\n      writer.uint32(34).string(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DeleteBookmarkCollectionsEntryResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDeleteBookmarkCollectionsEntryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.collectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.entryId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.status = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DeleteBookmarkCollectionsEntryResponse {\n    return {\n      collectionId: isSet(object.collectionId) ? globalThis.String(object.collectionId) : \"\",\n      entryId: isSet(object.entryId) ? globalThis.String(object.entryId) : \"\",\n      status: isSet(object.status) ? globalThis.String(object.status) : \"\",\n    };\n  },\n\n  toJSON(message: DeleteBookmarkCollectionsEntryResponse): unknown {\n    const obj: any = {};\n    if (message.collectionId !== \"\") {\n      obj.collectionId = message.collectionId;\n    }\n    if (message.entryId !== \"\") {\n      obj.entryId = message.entryId;\n    }\n    if (message.status !== \"\") {\n      obj.status = message.status;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DeleteBookmarkCollectionsEntryResponse>, I>>(\n    base?: I,\n  ): DeleteBookmarkCollectionsEntryResponse {\n    return DeleteBookmarkCollectionsEntryResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DeleteBookmarkCollectionsEntryResponse>, I>>(\n    object: I,\n  ): DeleteBookmarkCollectionsEntryResponse {\n    const message = createBaseDeleteBookmarkCollectionsEntryResponse();\n    message.collectionId = object.collectionId ?? \"\";\n    message.entryId = object.entryId ?? \"\";\n    message.status = object.status ?? \"\";\n    return message;\n  },\n};\n\nexport type BookmarkCollectionsEntriesManagerService = typeof BookmarkCollectionsEntriesManagerService;\nexport const BookmarkCollectionsEntriesManagerService = {\n  createNewBookmarkCollectionEntry: {\n    path: \"/bookmark_collections_entries.BookmarkCollectionsEntriesManager/CreateNewBookmarkCollectionEntry\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: NewBookmarkCollectionsEntryRequest) =>\n      Buffer.from(NewBookmarkCollectionsEntryRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => NewBookmarkCollectionsEntryRequest.decode(value),\n    responseSerialize: (value: GetBookmarkCollectionsEntryResponse) =>\n      Buffer.from(GetBookmarkCollectionsEntryResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => GetBookmarkCollectionsEntryResponse.decode(value),\n  },\n  getBookmarkCollectionEntry: {\n    path: \"/bookmark_collections_entries.BookmarkCollectionsEntriesManager/GetBookmarkCollectionEntry\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetBookmarkCollectionsEntryRequest) =>\n      Buffer.from(GetBookmarkCollectionsEntryRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetBookmarkCollectionsEntryRequest.decode(value),\n    responseSerialize: (value: GetBookmarkCollectionsEntryResponse) =>\n      Buffer.from(GetBookmarkCollectionsEntryResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => GetBookmarkCollectionsEntryResponse.decode(value),\n  },\n  updateBookmarkCollectionEntry: {\n    path: \"/bookmark_collections_entries.BookmarkCollectionsEntriesManager/UpdateBookmarkCollectionEntry\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: UpdateBookmarkCollectionsEntryRequest) =>\n      Buffer.from(UpdateBookmarkCollectionsEntryRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => UpdateBookmarkCollectionsEntryRequest.decode(value),\n    responseSerialize: (value: GetBookmarkCollectionsEntryResponse) =>\n      Buffer.from(GetBookmarkCollectionsEntryResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => GetBookmarkCollectionsEntryResponse.decode(value),\n  },\n  deleteBookmarkCollectionEntry: {\n    path: \"/bookmark_collections_entries.BookmarkCollectionsEntriesManager/DeleteBookmarkCollectionEntry\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: UpdateBookmarkCollectionsEntryRequest) =>\n      Buffer.from(UpdateBookmarkCollectionsEntryRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => UpdateBookmarkCollectionsEntryRequest.decode(value),\n    responseSerialize: (value: DeleteBookmarkCollectionsEntryResponse) =>\n      Buffer.from(DeleteBookmarkCollectionsEntryResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => DeleteBookmarkCollectionsEntryResponse.decode(value),\n  },\n} as const;\n\nexport interface BookmarkCollectionsEntriesManagerServer extends UntypedServiceImplementation {\n  createNewBookmarkCollectionEntry: handleUnaryCall<\n    NewBookmarkCollectionsEntryRequest,\n    GetBookmarkCollectionsEntryResponse\n  >;\n  getBookmarkCollectionEntry: handleUnaryCall<GetBookmarkCollectionsEntryRequest, GetBookmarkCollectionsEntryResponse>;\n  updateBookmarkCollectionEntry: handleUnaryCall<\n    UpdateBookmarkCollectionsEntryRequest,\n    GetBookmarkCollectionsEntryResponse\n  >;\n  deleteBookmarkCollectionEntry: handleUnaryCall<\n    UpdateBookmarkCollectionsEntryRequest,\n    DeleteBookmarkCollectionsEntryResponse\n  >;\n}\n\nexport interface BookmarkCollectionsEntriesManagerClient extends Client {\n  createNewBookmarkCollectionEntry(\n    request: NewBookmarkCollectionsEntryRequest,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  createNewBookmarkCollectionEntry(\n    request: NewBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  createNewBookmarkCollectionEntry(\n    request: NewBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollectionEntry(\n    request: GetBookmarkCollectionsEntryRequest,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollectionEntry(\n    request: GetBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollectionEntry(\n    request: GetBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollectionEntry(\n    request: UpdateBookmarkCollectionsEntryRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionsEntryResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const BookmarkCollectionsEntriesManagerClient = makeGenericClientConstructor(\n  BookmarkCollectionsEntriesManagerService,\n  \"bookmark_collections_entries.BookmarkCollectionsEntriesManager\",\n) as unknown as {\n  new (\n    address: string,\n    credentials: ChannelCredentials,\n    options?: Partial<ClientOptions>,\n  ): BookmarkCollectionsEntriesManagerClient;\n  service: typeof BookmarkCollectionsEntriesManagerService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: bookmark_collections.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"BookmarkCollection\";\n\nexport interface BookmarkCollectionEntries {\n  title: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  BookmarkCollectionId: string;\n  moreFields: { [key: string]: string };\n}\n\nexport interface BookmarkCollectionEntries_MoreFieldsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface NewBookmarkCollectionRequest {\n  name: string;\n  description: string;\n}\n\nexport interface NewBookmarkCollectionResponse {\n  BookmarkCollectionId: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface GetBookmarkCollectionRequest {\n  BookmarkCollectionId: string;\n}\n\nexport interface GetBookmarkCollectionResponse {\n  BookmarkCollectionId: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  entries: BookmarkCollectionEntries[];\n}\n\nexport interface UpdateBookmarkCollectionRequest {\n  BookmarkCollectionId: string;\n  name?: string | undefined;\n  description?: string | undefined;\n}\n\nexport interface UpdateBookmarkCollectionResponse {\n  BookmarkCollectionId: string;\n  status: string;\n}\n\nexport interface DeleteBookmarkCollectionRequest {\n  BookmarkCollectionId: string;\n}\n\nexport interface DeleteBookmarkCollectionResponse {\n  BookmarkCollectionId: string;\n  message: string;\n}\n\nexport interface ListBookmarkCollectionsRequest {\n  page: number;\n  pageSize: number;\n}\n\nexport interface BookmarkCollection {\n  BookmarkCollectionId: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface ListBookmarkCollectionsResponse {\n  BookmarkCollections: BookmarkCollection[];\n  totalCount: number;\n}\n\nexport interface ListBookmarkCollectionEntryRequest {\n  BookmarkCollectionId: string;\n  page: number;\n  pageSize: number;\n}\n\nexport interface ListBookmarkCollectionEntryResponse {\n  BookmarkCollectionEntries: BookmarkCollectionEntries[];\n  totalCount: number;\n}\n\nfunction createBaseBookmarkCollectionEntries(): BookmarkCollectionEntries {\n  return { title: \"\", description: \"\", createdAt: \"\", updatedAt: \"\", BookmarkCollectionId: \"\", moreFields: {} };\n}\n\nexport const BookmarkCollectionEntries: MessageFns<BookmarkCollectionEntries> = {\n  encode(message: BookmarkCollectionEntries, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(26).string(message.createdAt);\n    }\n    if (message.updatedAt !== \"\") {\n      writer.uint32(34).string(message.updatedAt);\n    }\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(42).string(message.BookmarkCollectionId);\n    }\n    Object.entries(message.moreFields).forEach(([key, value]) => {\n      BookmarkCollectionEntries_MoreFieldsEntry.encode({ key: key as any, value }, writer.uint32(50).fork()).join();\n    });\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): BookmarkCollectionEntries {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBookmarkCollectionEntries();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.title = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.updatedAt = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          const entry6 = BookmarkCollectionEntries_MoreFieldsEntry.decode(reader, reader.uint32());\n          if (entry6.value !== undefined) {\n            message.moreFields[entry6.key] = entry6.value;\n          }\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): BookmarkCollectionEntries {\n    return {\n      title: isSet(object.title) ? globalThis.String(object.title) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      updatedAt: isSet(object.updatedAt) ? globalThis.String(object.updatedAt) : \"\",\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      moreFields: isObject(object.moreFields)\n        ? Object.entries(object.moreFields).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n          acc[key] = String(value);\n          return acc;\n        }, {})\n        : {},\n    };\n  },\n\n  toJSON(message: BookmarkCollectionEntries): unknown {\n    const obj: any = {};\n    if (message.title !== \"\") {\n      obj.title = message.title;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.updatedAt !== \"\") {\n      obj.updatedAt = message.updatedAt;\n    }\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.moreFields) {\n      const entries = Object.entries(message.moreFields);\n      if (entries.length > 0) {\n        obj.moreFields = {};\n        entries.forEach(([k, v]) => {\n          obj.moreFields[k] = v;\n        });\n      }\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<BookmarkCollectionEntries>, I>>(base?: I): BookmarkCollectionEntries {\n    return BookmarkCollectionEntries.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<BookmarkCollectionEntries>, I>>(object: I): BookmarkCollectionEntries {\n    const message = createBaseBookmarkCollectionEntries();\n    message.title = object.title ?? \"\";\n    message.description = object.description ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.updatedAt = object.updatedAt ?? \"\";\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.moreFields = Object.entries(object.moreFields ?? {}).reduce<{ [key: string]: string }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = globalThis.String(value);\n        }\n        return acc;\n      },\n      {},\n    );\n    return message;\n  },\n};\n\nfunction createBaseBookmarkCollectionEntries_MoreFieldsEntry(): BookmarkCollectionEntries_MoreFieldsEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const BookmarkCollectionEntries_MoreFieldsEntry: MessageFns<BookmarkCollectionEntries_MoreFieldsEntry> = {\n  encode(message: BookmarkCollectionEntries_MoreFieldsEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): BookmarkCollectionEntries_MoreFieldsEntry {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBookmarkCollectionEntries_MoreFieldsEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): BookmarkCollectionEntries_MoreFieldsEntry {\n    return {\n      key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n      value: isSet(object.value) ? globalThis.String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: BookmarkCollectionEntries_MoreFieldsEntry): unknown {\n    const obj: any = {};\n    if (message.key !== \"\") {\n      obj.key = message.key;\n    }\n    if (message.value !== \"\") {\n      obj.value = message.value;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<BookmarkCollectionEntries_MoreFieldsEntry>, I>>(\n    base?: I,\n  ): BookmarkCollectionEntries_MoreFieldsEntry {\n    return BookmarkCollectionEntries_MoreFieldsEntry.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<BookmarkCollectionEntries_MoreFieldsEntry>, I>>(\n    object: I,\n  ): BookmarkCollectionEntries_MoreFieldsEntry {\n    const message = createBaseBookmarkCollectionEntries_MoreFieldsEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseNewBookmarkCollectionRequest(): NewBookmarkCollectionRequest {\n  return { name: \"\", description: \"\" };\n}\n\nexport const NewBookmarkCollectionRequest: MessageFns<NewBookmarkCollectionRequest> = {\n  encode(message: NewBookmarkCollectionRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): NewBookmarkCollectionRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseNewBookmarkCollectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): NewBookmarkCollectionRequest {\n    return {\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n    };\n  },\n\n  toJSON(message: NewBookmarkCollectionRequest): unknown {\n    const obj: any = {};\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<NewBookmarkCollectionRequest>, I>>(base?: I): NewBookmarkCollectionRequest {\n    return NewBookmarkCollectionRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<NewBookmarkCollectionRequest>, I>>(object: I): NewBookmarkCollectionRequest {\n    const message = createBaseNewBookmarkCollectionRequest();\n    message.name = object.name ?? \"\";\n    message.description = object.description ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseNewBookmarkCollectionResponse(): NewBookmarkCollectionResponse {\n  return { BookmarkCollectionId: \"\", name: \"\", description: \"\", createdAt: \"\", updatedAt: \"\" };\n}\n\nexport const NewBookmarkCollectionResponse: MessageFns<NewBookmarkCollectionResponse> = {\n  encode(message: NewBookmarkCollectionResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(26).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(34).string(message.description);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(42).string(message.createdAt);\n    }\n    if (message.updatedAt !== \"\") {\n      writer.uint32(50).string(message.updatedAt);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): NewBookmarkCollectionResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseNewBookmarkCollectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.updatedAt = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): NewBookmarkCollectionResponse {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      updatedAt: isSet(object.updatedAt) ? globalThis.String(object.updatedAt) : \"\",\n    };\n  },\n\n  toJSON(message: NewBookmarkCollectionResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.updatedAt !== \"\") {\n      obj.updatedAt = message.updatedAt;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<NewBookmarkCollectionResponse>, I>>(base?: I): NewBookmarkCollectionResponse {\n    return NewBookmarkCollectionResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<NewBookmarkCollectionResponse>, I>>(\n    object: I,\n  ): NewBookmarkCollectionResponse {\n    const message = createBaseNewBookmarkCollectionResponse();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.name = object.name ?? \"\";\n    message.description = object.description ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.updatedAt = object.updatedAt ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBookmarkCollectionRequest(): GetBookmarkCollectionRequest {\n  return { BookmarkCollectionId: \"\" };\n}\n\nexport const GetBookmarkCollectionRequest: MessageFns<GetBookmarkCollectionRequest> = {\n  encode(message: GetBookmarkCollectionRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetBookmarkCollectionRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBookmarkCollectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetBookmarkCollectionRequest {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n    };\n  },\n\n  toJSON(message: GetBookmarkCollectionRequest): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetBookmarkCollectionRequest>, I>>(base?: I): GetBookmarkCollectionRequest {\n    return GetBookmarkCollectionRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetBookmarkCollectionRequest>, I>>(object: I): GetBookmarkCollectionRequest {\n    const message = createBaseGetBookmarkCollectionRequest();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBookmarkCollectionResponse(): GetBookmarkCollectionResponse {\n  return { BookmarkCollectionId: \"\", name: \"\", description: \"\", createdAt: \"\", updatedAt: \"\", entries: [] };\n}\n\nexport const GetBookmarkCollectionResponse: MessageFns<GetBookmarkCollectionResponse> = {\n  encode(message: GetBookmarkCollectionResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(34).string(message.createdAt);\n    }\n    if (message.updatedAt !== \"\") {\n      writer.uint32(42).string(message.updatedAt);\n    }\n    for (const v of message.entries) {\n      BookmarkCollectionEntries.encode(v!, writer.uint32(58).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetBookmarkCollectionResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBookmarkCollectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.updatedAt = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.entries.push(BookmarkCollectionEntries.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetBookmarkCollectionResponse {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      updatedAt: isSet(object.updatedAt) ? globalThis.String(object.updatedAt) : \"\",\n      entries: globalThis.Array.isArray(object?.entries)\n        ? object.entries.map((e: any) => BookmarkCollectionEntries.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: GetBookmarkCollectionResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.updatedAt !== \"\") {\n      obj.updatedAt = message.updatedAt;\n    }\n    if (message.entries?.length) {\n      obj.entries = message.entries.map((e) => BookmarkCollectionEntries.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetBookmarkCollectionResponse>, I>>(base?: I): GetBookmarkCollectionResponse {\n    return GetBookmarkCollectionResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetBookmarkCollectionResponse>, I>>(\n    object: I,\n  ): GetBookmarkCollectionResponse {\n    const message = createBaseGetBookmarkCollectionResponse();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.name = object.name ?? \"\";\n    message.description = object.description ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.updatedAt = object.updatedAt ?? \"\";\n    message.entries = object.entries?.map((e) => BookmarkCollectionEntries.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseUpdateBookmarkCollectionRequest(): UpdateBookmarkCollectionRequest {\n  return { BookmarkCollectionId: \"\", name: undefined, description: undefined };\n}\n\nexport const UpdateBookmarkCollectionRequest: MessageFns<UpdateBookmarkCollectionRequest> = {\n  encode(message: UpdateBookmarkCollectionRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.name !== undefined) {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.description !== undefined) {\n      writer.uint32(26).string(message.description);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UpdateBookmarkCollectionRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpdateBookmarkCollectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpdateBookmarkCollectionRequest {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : undefined,\n      description: isSet(object.description) ? globalThis.String(object.description) : undefined,\n    };\n  },\n\n  toJSON(message: UpdateBookmarkCollectionRequest): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.name !== undefined) {\n      obj.name = message.name;\n    }\n    if (message.description !== undefined) {\n      obj.description = message.description;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<UpdateBookmarkCollectionRequest>, I>>(base?: I): UpdateBookmarkCollectionRequest {\n    return UpdateBookmarkCollectionRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UpdateBookmarkCollectionRequest>, I>>(\n    object: I,\n  ): UpdateBookmarkCollectionRequest {\n    const message = createBaseUpdateBookmarkCollectionRequest();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.name = object.name ?? undefined;\n    message.description = object.description ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseUpdateBookmarkCollectionResponse(): UpdateBookmarkCollectionResponse {\n  return { BookmarkCollectionId: \"\", status: \"\" };\n}\n\nexport const UpdateBookmarkCollectionResponse: MessageFns<UpdateBookmarkCollectionResponse> = {\n  encode(message: UpdateBookmarkCollectionResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.status !== \"\") {\n      writer.uint32(18).string(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UpdateBookmarkCollectionResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpdateBookmarkCollectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.status = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpdateBookmarkCollectionResponse {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      status: isSet(object.status) ? globalThis.String(object.status) : \"\",\n    };\n  },\n\n  toJSON(message: UpdateBookmarkCollectionResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.status !== \"\") {\n      obj.status = message.status;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<UpdateBookmarkCollectionResponse>, I>>(\n    base?: I,\n  ): UpdateBookmarkCollectionResponse {\n    return UpdateBookmarkCollectionResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UpdateBookmarkCollectionResponse>, I>>(\n    object: I,\n  ): UpdateBookmarkCollectionResponse {\n    const message = createBaseUpdateBookmarkCollectionResponse();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.status = object.status ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDeleteBookmarkCollectionRequest(): DeleteBookmarkCollectionRequest {\n  return { BookmarkCollectionId: \"\" };\n}\n\nexport const DeleteBookmarkCollectionRequest: MessageFns<DeleteBookmarkCollectionRequest> = {\n  encode(message: DeleteBookmarkCollectionRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DeleteBookmarkCollectionRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDeleteBookmarkCollectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DeleteBookmarkCollectionRequest {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n    };\n  },\n\n  toJSON(message: DeleteBookmarkCollectionRequest): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DeleteBookmarkCollectionRequest>, I>>(base?: I): DeleteBookmarkCollectionRequest {\n    return DeleteBookmarkCollectionRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DeleteBookmarkCollectionRequest>, I>>(\n    object: I,\n  ): DeleteBookmarkCollectionRequest {\n    const message = createBaseDeleteBookmarkCollectionRequest();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDeleteBookmarkCollectionResponse(): DeleteBookmarkCollectionResponse {\n  return { BookmarkCollectionId: \"\", message: \"\" };\n}\n\nexport const DeleteBookmarkCollectionResponse: MessageFns<DeleteBookmarkCollectionResponse> = {\n  encode(message: DeleteBookmarkCollectionResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.message !== \"\") {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DeleteBookmarkCollectionResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDeleteBookmarkCollectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DeleteBookmarkCollectionResponse {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n    };\n  },\n\n  toJSON(message: DeleteBookmarkCollectionResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DeleteBookmarkCollectionResponse>, I>>(\n    base?: I,\n  ): DeleteBookmarkCollectionResponse {\n    return DeleteBookmarkCollectionResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DeleteBookmarkCollectionResponse>, I>>(\n    object: I,\n  ): DeleteBookmarkCollectionResponse {\n    const message = createBaseDeleteBookmarkCollectionResponse();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListBookmarkCollectionsRequest(): ListBookmarkCollectionsRequest {\n  return { page: 0, pageSize: 0 };\n}\n\nexport const ListBookmarkCollectionsRequest: MessageFns<ListBookmarkCollectionsRequest> = {\n  encode(message: ListBookmarkCollectionsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.page !== 0) {\n      writer.uint32(8).uint32(message.page);\n    }\n    if (message.pageSize !== 0) {\n      writer.uint32(16).uint32(message.pageSize);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListBookmarkCollectionsRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListBookmarkCollectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.page = reader.uint32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.pageSize = reader.uint32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListBookmarkCollectionsRequest {\n    return {\n      page: isSet(object.page) ? globalThis.Number(object.page) : 0,\n      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,\n    };\n  },\n\n  toJSON(message: ListBookmarkCollectionsRequest): unknown {\n    const obj: any = {};\n    if (message.page !== 0) {\n      obj.page = Math.round(message.page);\n    }\n    if (message.pageSize !== 0) {\n      obj.pageSize = Math.round(message.pageSize);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListBookmarkCollectionsRequest>, I>>(base?: I): ListBookmarkCollectionsRequest {\n    return ListBookmarkCollectionsRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListBookmarkCollectionsRequest>, I>>(\n    object: I,\n  ): ListBookmarkCollectionsRequest {\n    const message = createBaseListBookmarkCollectionsRequest();\n    message.page = object.page ?? 0;\n    message.pageSize = object.pageSize ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseBookmarkCollection(): BookmarkCollection {\n  return { BookmarkCollectionId: \"\", name: \"\", description: \"\", createdAt: \"\", updatedAt: \"\" };\n}\n\nexport const BookmarkCollection: MessageFns<BookmarkCollection> = {\n  encode(message: BookmarkCollection, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(34).string(message.createdAt);\n    }\n    if (message.updatedAt !== \"\") {\n      writer.uint32(42).string(message.updatedAt);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): BookmarkCollection {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBookmarkCollection();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.updatedAt = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): BookmarkCollection {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      description: isSet(object.description) ? globalThis.String(object.description) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      updatedAt: isSet(object.updatedAt) ? globalThis.String(object.updatedAt) : \"\",\n    };\n  },\n\n  toJSON(message: BookmarkCollection): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.description !== \"\") {\n      obj.description = message.description;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.updatedAt !== \"\") {\n      obj.updatedAt = message.updatedAt;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<BookmarkCollection>, I>>(base?: I): BookmarkCollection {\n    return BookmarkCollection.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<BookmarkCollection>, I>>(object: I): BookmarkCollection {\n    const message = createBaseBookmarkCollection();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.name = object.name ?? \"\";\n    message.description = object.description ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.updatedAt = object.updatedAt ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListBookmarkCollectionsResponse(): ListBookmarkCollectionsResponse {\n  return { BookmarkCollections: [], totalCount: 0 };\n}\n\nexport const ListBookmarkCollectionsResponse: MessageFns<ListBookmarkCollectionsResponse> = {\n  encode(message: ListBookmarkCollectionsResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.BookmarkCollections) {\n      BookmarkCollection.encode(v!, writer.uint32(10).fork()).join();\n    }\n    if (message.totalCount !== 0) {\n      writer.uint32(16).uint32(message.totalCount);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListBookmarkCollectionsResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListBookmarkCollectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollections.push(BookmarkCollection.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.totalCount = reader.uint32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListBookmarkCollectionsResponse {\n    return {\n      BookmarkCollections: globalThis.Array.isArray(object?.BookmarkCollections)\n        ? object.BookmarkCollections.map((e: any) => BookmarkCollection.fromJSON(e))\n        : [],\n      totalCount: isSet(object.totalCount) ? globalThis.Number(object.totalCount) : 0,\n    };\n  },\n\n  toJSON(message: ListBookmarkCollectionsResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollections?.length) {\n      obj.BookmarkCollections = message.BookmarkCollections.map((e) => BookmarkCollection.toJSON(e));\n    }\n    if (message.totalCount !== 0) {\n      obj.totalCount = Math.round(message.totalCount);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListBookmarkCollectionsResponse>, I>>(base?: I): ListBookmarkCollectionsResponse {\n    return ListBookmarkCollectionsResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListBookmarkCollectionsResponse>, I>>(\n    object: I,\n  ): ListBookmarkCollectionsResponse {\n    const message = createBaseListBookmarkCollectionsResponse();\n    message.BookmarkCollections = object.BookmarkCollections?.map((e) => BookmarkCollection.fromPartial(e)) || [];\n    message.totalCount = object.totalCount ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseListBookmarkCollectionEntryRequest(): ListBookmarkCollectionEntryRequest {\n  return { BookmarkCollectionId: \"\", page: 0, pageSize: 0 };\n}\n\nexport const ListBookmarkCollectionEntryRequest: MessageFns<ListBookmarkCollectionEntryRequest> = {\n  encode(message: ListBookmarkCollectionEntryRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.BookmarkCollectionId !== \"\") {\n      writer.uint32(10).string(message.BookmarkCollectionId);\n    }\n    if (message.page !== 0) {\n      writer.uint32(32).uint32(message.page);\n    }\n    if (message.pageSize !== 0) {\n      writer.uint32(40).uint32(message.pageSize);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListBookmarkCollectionEntryRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListBookmarkCollectionEntryRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.page = reader.uint32();\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.pageSize = reader.uint32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListBookmarkCollectionEntryRequest {\n    return {\n      BookmarkCollectionId: isSet(object.BookmarkCollectionId) ? globalThis.String(object.BookmarkCollectionId) : \"\",\n      page: isSet(object.page) ? globalThis.Number(object.page) : 0,\n      pageSize: isSet(object.pageSize) ? globalThis.Number(object.pageSize) : 0,\n    };\n  },\n\n  toJSON(message: ListBookmarkCollectionEntryRequest): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionId !== \"\") {\n      obj.BookmarkCollectionId = message.BookmarkCollectionId;\n    }\n    if (message.page !== 0) {\n      obj.page = Math.round(message.page);\n    }\n    if (message.pageSize !== 0) {\n      obj.pageSize = Math.round(message.pageSize);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListBookmarkCollectionEntryRequest>, I>>(\n    base?: I,\n  ): ListBookmarkCollectionEntryRequest {\n    return ListBookmarkCollectionEntryRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListBookmarkCollectionEntryRequest>, I>>(\n    object: I,\n  ): ListBookmarkCollectionEntryRequest {\n    const message = createBaseListBookmarkCollectionEntryRequest();\n    message.BookmarkCollectionId = object.BookmarkCollectionId ?? \"\";\n    message.page = object.page ?? 0;\n    message.pageSize = object.pageSize ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseListBookmarkCollectionEntryResponse(): ListBookmarkCollectionEntryResponse {\n  return { BookmarkCollectionEntries: [], totalCount: 0 };\n}\n\nexport const ListBookmarkCollectionEntryResponse: MessageFns<ListBookmarkCollectionEntryResponse> = {\n  encode(message: ListBookmarkCollectionEntryResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.BookmarkCollectionEntries) {\n      BookmarkCollectionEntries.encode(v!, writer.uint32(10).fork()).join();\n    }\n    if (message.totalCount !== 0) {\n      writer.uint32(16).uint32(message.totalCount);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListBookmarkCollectionEntryResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListBookmarkCollectionEntryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.BookmarkCollectionEntries.push(BookmarkCollectionEntries.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.totalCount = reader.uint32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListBookmarkCollectionEntryResponse {\n    return {\n      BookmarkCollectionEntries: globalThis.Array.isArray(object?.BookmarkCollectionEntries)\n        ? object.BookmarkCollectionEntries.map((e: any) => BookmarkCollectionEntries.fromJSON(e))\n        : [],\n      totalCount: isSet(object.totalCount) ? globalThis.Number(object.totalCount) : 0,\n    };\n  },\n\n  toJSON(message: ListBookmarkCollectionEntryResponse): unknown {\n    const obj: any = {};\n    if (message.BookmarkCollectionEntries?.length) {\n      obj.BookmarkCollectionEntries = message.BookmarkCollectionEntries.map((e) => BookmarkCollectionEntries.toJSON(e));\n    }\n    if (message.totalCount !== 0) {\n      obj.totalCount = Math.round(message.totalCount);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListBookmarkCollectionEntryResponse>, I>>(\n    base?: I,\n  ): ListBookmarkCollectionEntryResponse {\n    return ListBookmarkCollectionEntryResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListBookmarkCollectionEntryResponse>, I>>(\n    object: I,\n  ): ListBookmarkCollectionEntryResponse {\n    const message = createBaseListBookmarkCollectionEntryResponse();\n    message.BookmarkCollectionEntries =\n      object.BookmarkCollectionEntries?.map((e) => BookmarkCollectionEntries.fromPartial(e)) || [];\n    message.totalCount = object.totalCount ?? 0;\n    return message;\n  },\n};\n\nexport type BookmarkCollectionManagerService = typeof BookmarkCollectionManagerService;\nexport const BookmarkCollectionManagerService = {\n  createNewBookmarkCollection: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/CreateNewBookmarkCollection\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: NewBookmarkCollectionRequest) =>\n      Buffer.from(NewBookmarkCollectionRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => NewBookmarkCollectionRequest.decode(value),\n    responseSerialize: (value: NewBookmarkCollectionResponse) =>\n      Buffer.from(NewBookmarkCollectionResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => NewBookmarkCollectionResponse.decode(value),\n  },\n  getBookmarkCollection: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/GetBookmarkCollection\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetBookmarkCollectionRequest) =>\n      Buffer.from(GetBookmarkCollectionRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetBookmarkCollectionRequest.decode(value),\n    responseSerialize: (value: GetBookmarkCollectionResponse) =>\n      Buffer.from(GetBookmarkCollectionResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => GetBookmarkCollectionResponse.decode(value),\n  },\n  updateBookmarkCollection: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/UpdateBookmarkCollection\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: UpdateBookmarkCollectionRequest) =>\n      Buffer.from(UpdateBookmarkCollectionRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => UpdateBookmarkCollectionRequest.decode(value),\n    responseSerialize: (value: GetBookmarkCollectionResponse) =>\n      Buffer.from(GetBookmarkCollectionResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => GetBookmarkCollectionResponse.decode(value),\n  },\n  deleteBookmarkCollection: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/DeleteBookmarkCollection\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: DeleteBookmarkCollectionRequest) =>\n      Buffer.from(DeleteBookmarkCollectionRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => DeleteBookmarkCollectionRequest.decode(value),\n    responseSerialize: (value: DeleteBookmarkCollectionResponse) =>\n      Buffer.from(DeleteBookmarkCollectionResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => DeleteBookmarkCollectionResponse.decode(value),\n  },\n  listBookmarkCollections: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/ListBookmarkCollections\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListBookmarkCollectionsRequest) =>\n      Buffer.from(ListBookmarkCollectionsRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListBookmarkCollectionsRequest.decode(value),\n    responseSerialize: (value: ListBookmarkCollectionsResponse) =>\n      Buffer.from(ListBookmarkCollectionsResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ListBookmarkCollectionsResponse.decode(value),\n  },\n  listBookmarkCollectionEntries: {\n    path: \"/BookmarkCollection.BookmarkCollectionManager/ListBookmarkCollectionEntries\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListBookmarkCollectionEntryRequest) =>\n      Buffer.from(ListBookmarkCollectionEntryRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListBookmarkCollectionEntryRequest.decode(value),\n    responseSerialize: (value: ListBookmarkCollectionEntryResponse) =>\n      Buffer.from(ListBookmarkCollectionEntryResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ListBookmarkCollectionEntryResponse.decode(value),\n  },\n} as const;\n\nexport interface BookmarkCollectionManagerServer extends UntypedServiceImplementation {\n  createNewBookmarkCollection: handleUnaryCall<NewBookmarkCollectionRequest, NewBookmarkCollectionResponse>;\n  getBookmarkCollection: handleUnaryCall<GetBookmarkCollectionRequest, GetBookmarkCollectionResponse>;\n  updateBookmarkCollection: handleUnaryCall<UpdateBookmarkCollectionRequest, GetBookmarkCollectionResponse>;\n  deleteBookmarkCollection: handleUnaryCall<DeleteBookmarkCollectionRequest, DeleteBookmarkCollectionResponse>;\n  listBookmarkCollections: handleUnaryCall<ListBookmarkCollectionsRequest, ListBookmarkCollectionsResponse>;\n  listBookmarkCollectionEntries: handleUnaryCall<\n    ListBookmarkCollectionEntryRequest,\n    ListBookmarkCollectionEntryResponse\n  >;\n}\n\nexport interface BookmarkCollectionManagerClient extends Client {\n  createNewBookmarkCollection(\n    request: NewBookmarkCollectionRequest,\n    callback: (error: ServiceError | null, response: NewBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  createNewBookmarkCollection(\n    request: NewBookmarkCollectionRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: NewBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  createNewBookmarkCollection(\n    request: NewBookmarkCollectionRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: NewBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollection(\n    request: GetBookmarkCollectionRequest,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollection(\n    request: GetBookmarkCollectionRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  getBookmarkCollection(\n    request: GetBookmarkCollectionRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollection(\n    request: UpdateBookmarkCollectionRequest,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollection(\n    request: UpdateBookmarkCollectionRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  updateBookmarkCollection(\n    request: UpdateBookmarkCollectionRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: GetBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollection(\n    request: DeleteBookmarkCollectionRequest,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollection(\n    request: DeleteBookmarkCollectionRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  deleteBookmarkCollection(\n    request: DeleteBookmarkCollectionRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: DeleteBookmarkCollectionResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollections(\n    request: ListBookmarkCollectionsRequest,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionsResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollections(\n    request: ListBookmarkCollectionsRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionsResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollections(\n    request: ListBookmarkCollectionsRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionsResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollectionEntries(\n    request: ListBookmarkCollectionEntryRequest,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionEntryResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollectionEntries(\n    request: ListBookmarkCollectionEntryRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionEntryResponse) => void,\n  ): ClientUnaryCall;\n  listBookmarkCollectionEntries(\n    request: ListBookmarkCollectionEntryRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ListBookmarkCollectionEntryResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const BookmarkCollectionManagerClient = makeGenericClientConstructor(\n  BookmarkCollectionManagerService,\n  \"BookmarkCollection.BookmarkCollectionManager\",\n) as unknown as {\n  new (\n    address: string,\n    credentials: ChannelCredentials,\n    options?: Partial<ClientOptions>,\n  ): BookmarkCollectionManagerClient;\n  service: typeof BookmarkCollectionManagerService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: common.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\n\nexport const protobufPackage = \"common\";\n\nexport enum RequestStatus {\n  Success = 0,\n  Failed = 1,\n  UNRECOGNIZED = -1,\n}\n\nexport function requestStatusFromJSON(object: any): RequestStatus {\n  switch (object) {\n    case 0:\n    case \"Success\":\n      return RequestStatus.Success;\n    case 1:\n    case \"Failed\":\n      return RequestStatus.Failed;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return RequestStatus.UNRECOGNIZED;\n  }\n}\n\nexport function requestStatusToJSON(object: RequestStatus): string {\n  switch (object) {\n    case RequestStatus.Success:\n      return \"Success\";\n    case RequestStatus.Failed:\n      return \"Failed\";\n    case RequestStatus.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\nexport interface ErrorResponse {\n  code: number;\n  message: string;\n}\n\nfunction createBaseErrorResponse(): ErrorResponse {\n  return { code: 0, message: \"\" };\n}\n\nexport const ErrorResponse: MessageFns<ErrorResponse> = {\n  encode(message: ErrorResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.code !== 0) {\n      writer.uint32(8).int32(message.code);\n    }\n    if (message.message !== \"\") {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ErrorResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseErrorResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.code = reader.int32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ErrorResponse {\n    return {\n      code: isSet(object.code) ? globalThis.Number(object.code) : 0,\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n    };\n  },\n\n  toJSON(message: ErrorResponse): unknown {\n    const obj: any = {};\n    if (message.code !== 0) {\n      obj.code = Math.round(message.code);\n    }\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ErrorResponse>, I>>(base?: I): ErrorResponse {\n    return ErrorResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ErrorResponse>, I>>(object: I): ErrorResponse {\n    const message = createBaseErrorResponse();\n    message.code = object.code ?? 0;\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: health_check.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"health_check\";\n\nexport enum Status {\n  Ok = 0,\n  Bad = 1,\n  UNRECOGNIZED = -1,\n}\n\nexport function statusFromJSON(object: any): Status {\n  switch (object) {\n    case 0:\n    case \"Ok\":\n      return Status.Ok;\n    case 1:\n    case \"Bad\":\n      return Status.Bad;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Status.UNRECOGNIZED;\n  }\n}\n\nexport function statusToJSON(object: Status): string {\n  switch (object) {\n    case Status.Ok:\n      return \"Ok\";\n    case Status.Bad:\n      return \"Bad\";\n    case Status.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\nexport interface HealthCheckRequest {\n}\n\nexport interface HealthCheckResponse {\n  status: Status;\n  message: string;\n}\n\nfunction createBaseHealthCheckRequest(): HealthCheckRequest {\n  return {};\n}\n\nexport const HealthCheckRequest: MessageFns<HealthCheckRequest> = {\n  encode(_: HealthCheckRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): HealthCheckRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHealthCheckRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): HealthCheckRequest {\n    return {};\n  },\n\n  toJSON(_: HealthCheckRequest): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<HealthCheckRequest>, I>>(base?: I): HealthCheckRequest {\n    return HealthCheckRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<HealthCheckRequest>, I>>(_: I): HealthCheckRequest {\n    const message = createBaseHealthCheckRequest();\n    return message;\n  },\n};\n\nfunction createBaseHealthCheckResponse(): HealthCheckResponse {\n  return { status: 0, message: \"\" };\n}\n\nexport const HealthCheckResponse: MessageFns<HealthCheckResponse> = {\n  encode(message: HealthCheckResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.status !== 0) {\n      writer.uint32(8).int32(message.status);\n    }\n    if (message.message !== \"\") {\n      writer.uint32(18).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): HealthCheckResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHealthCheckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.status = reader.int32() as any;\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): HealthCheckResponse {\n    return {\n      status: isSet(object.status) ? statusFromJSON(object.status) : 0,\n      message: isSet(object.message) ? globalThis.String(object.message) : \"\",\n    };\n  },\n\n  toJSON(message: HealthCheckResponse): unknown {\n    const obj: any = {};\n    if (message.status !== 0) {\n      obj.status = statusToJSON(message.status);\n    }\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<HealthCheckResponse>, I>>(base?: I): HealthCheckResponse {\n    return HealthCheckResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<HealthCheckResponse>, I>>(object: I): HealthCheckResponse {\n    const message = createBaseHealthCheckResponse();\n    message.status = object.status ?? 0;\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\nexport type HealthCheckService = typeof HealthCheckService;\nexport const HealthCheckService = {\n  checkServiceHealth: {\n    path: \"/health_check.HealthCheck/CheckServiceHealth\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: HealthCheckRequest) => Buffer.from(HealthCheckRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => HealthCheckRequest.decode(value),\n    responseSerialize: (value: HealthCheckResponse) => Buffer.from(HealthCheckResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => HealthCheckResponse.decode(value),\n  },\n} as const;\n\nexport interface HealthCheckServer extends UntypedServiceImplementation {\n  checkServiceHealth: handleUnaryCall<HealthCheckRequest, HealthCheckResponse>;\n}\n\nexport interface HealthCheckClient extends Client {\n  checkServiceHealth(\n    request: HealthCheckRequest,\n    callback: (error: ServiceError | null, response: HealthCheckResponse) => void,\n  ): ClientUnaryCall;\n  checkServiceHealth(\n    request: HealthCheckRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: HealthCheckResponse) => void,\n  ): ClientUnaryCall;\n  checkServiceHealth(\n    request: HealthCheckRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: HealthCheckResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const HealthCheckClient = makeGenericClientConstructor(\n  HealthCheckService,\n  \"health_check.HealthCheck\",\n) as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): HealthCheckClient;\n  service: typeof HealthCheckService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.3.0\n//   protoc               v5.28.3\n// source: user_profile.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\n\nexport const protobufPackage = \"user_profile\";\n\nexport interface ProfileRequest {\n}\n\nexport interface ProfileResponse {\n  id: string;\n  lastName: string;\n  firstName: string;\n  email: string;\n}\n\nexport interface ProfileUpdateRequest {\n  lastName?: string | undefined;\n  firstName?: string | undefined;\n  email?: string | undefined;\n}\n\nexport interface ProfileUpdateResponse {\n  id: string;\n  lastName: string;\n  firstName: string;\n  email: string;\n}\n\nfunction createBaseProfileRequest(): ProfileRequest {\n  return {};\n}\n\nexport const ProfileRequest: MessageFns<ProfileRequest> = {\n  encode(_: ProfileRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ProfileRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProfileRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): ProfileRequest {\n    return {};\n  },\n\n  toJSON(_: ProfileRequest): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ProfileRequest>, I>>(base?: I): ProfileRequest {\n    return ProfileRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ProfileRequest>, I>>(_: I): ProfileRequest {\n    const message = createBaseProfileRequest();\n    return message;\n  },\n};\n\nfunction createBaseProfileResponse(): ProfileResponse {\n  return { id: \"\", lastName: \"\", firstName: \"\", email: \"\" };\n}\n\nexport const ProfileResponse: MessageFns<ProfileResponse> = {\n  encode(message: ProfileResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.lastName !== \"\") {\n      writer.uint32(18).string(message.lastName);\n    }\n    if (message.firstName !== \"\") {\n      writer.uint32(26).string(message.firstName);\n    }\n    if (message.email !== \"\") {\n      writer.uint32(34).string(message.email);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ProfileResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProfileResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.lastName = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.firstName = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.email = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProfileResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      lastName: isSet(object.lastName) ? globalThis.String(object.lastName) : \"\",\n      firstName: isSet(object.firstName) ? globalThis.String(object.firstName) : \"\",\n      email: isSet(object.email) ? globalThis.String(object.email) : \"\",\n    };\n  },\n\n  toJSON(message: ProfileResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.lastName !== \"\") {\n      obj.lastName = message.lastName;\n    }\n    if (message.firstName !== \"\") {\n      obj.firstName = message.firstName;\n    }\n    if (message.email !== \"\") {\n      obj.email = message.email;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ProfileResponse>, I>>(base?: I): ProfileResponse {\n    return ProfileResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ProfileResponse>, I>>(object: I): ProfileResponse {\n    const message = createBaseProfileResponse();\n    message.id = object.id ?? \"\";\n    message.lastName = object.lastName ?? \"\";\n    message.firstName = object.firstName ?? \"\";\n    message.email = object.email ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseProfileUpdateRequest(): ProfileUpdateRequest {\n  return { lastName: undefined, firstName: undefined, email: undefined };\n}\n\nexport const ProfileUpdateRequest: MessageFns<ProfileUpdateRequest> = {\n  encode(message: ProfileUpdateRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.lastName !== undefined) {\n      writer.uint32(18).string(message.lastName);\n    }\n    if (message.firstName !== undefined) {\n      writer.uint32(26).string(message.firstName);\n    }\n    if (message.email !== undefined) {\n      writer.uint32(34).string(message.email);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ProfileUpdateRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProfileUpdateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.lastName = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.firstName = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.email = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProfileUpdateRequest {\n    return {\n      lastName: isSet(object.lastName) ? globalThis.String(object.lastName) : undefined,\n      firstName: isSet(object.firstName) ? globalThis.String(object.firstName) : undefined,\n      email: isSet(object.email) ? globalThis.String(object.email) : undefined,\n    };\n  },\n\n  toJSON(message: ProfileUpdateRequest): unknown {\n    const obj: any = {};\n    if (message.lastName !== undefined) {\n      obj.lastName = message.lastName;\n    }\n    if (message.firstName !== undefined) {\n      obj.firstName = message.firstName;\n    }\n    if (message.email !== undefined) {\n      obj.email = message.email;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ProfileUpdateRequest>, I>>(base?: I): ProfileUpdateRequest {\n    return ProfileUpdateRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ProfileUpdateRequest>, I>>(object: I): ProfileUpdateRequest {\n    const message = createBaseProfileUpdateRequest();\n    message.lastName = object.lastName ?? undefined;\n    message.firstName = object.firstName ?? undefined;\n    message.email = object.email ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseProfileUpdateResponse(): ProfileUpdateResponse {\n  return { id: \"\", lastName: \"\", firstName: \"\", email: \"\" };\n}\n\nexport const ProfileUpdateResponse: MessageFns<ProfileUpdateResponse> = {\n  encode(message: ProfileUpdateResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.lastName !== \"\") {\n      writer.uint32(18).string(message.lastName);\n    }\n    if (message.firstName !== \"\") {\n      writer.uint32(26).string(message.firstName);\n    }\n    if (message.email !== \"\") {\n      writer.uint32(34).string(message.email);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ProfileUpdateResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProfileUpdateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.lastName = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.firstName = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.email = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProfileUpdateResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      lastName: isSet(object.lastName) ? globalThis.String(object.lastName) : \"\",\n      firstName: isSet(object.firstName) ? globalThis.String(object.firstName) : \"\",\n      email: isSet(object.email) ? globalThis.String(object.email) : \"\",\n    };\n  },\n\n  toJSON(message: ProfileUpdateResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.lastName !== \"\") {\n      obj.lastName = message.lastName;\n    }\n    if (message.firstName !== \"\") {\n      obj.firstName = message.firstName;\n    }\n    if (message.email !== \"\") {\n      obj.email = message.email;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ProfileUpdateResponse>, I>>(base?: I): ProfileUpdateResponse {\n    return ProfileUpdateResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ProfileUpdateResponse>, I>>(object: I): ProfileUpdateResponse {\n    const message = createBaseProfileUpdateResponse();\n    message.id = object.id ?? \"\";\n    message.lastName = object.lastName ?? \"\";\n    message.firstName = object.firstName ?? \"\";\n    message.email = object.email ?? \"\";\n    return message;\n  },\n};\n\nexport type UserProfileService = typeof UserProfileService;\nexport const UserProfileService = {\n  getProfile: {\n    path: \"/user_profile.UserProfile/GetProfile\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ProfileRequest) => Buffer.from(ProfileRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ProfileRequest.decode(value),\n    responseSerialize: (value: ProfileResponse) => Buffer.from(ProfileResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ProfileResponse.decode(value),\n  },\n  updateProfile: {\n    path: \"/user_profile.UserProfile/UpdateProfile\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ProfileUpdateRequest) => Buffer.from(ProfileUpdateRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ProfileUpdateRequest.decode(value),\n    responseSerialize: (value: ProfileUpdateResponse) => Buffer.from(ProfileUpdateResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ProfileUpdateResponse.decode(value),\n  },\n} as const;\n\nexport interface UserProfileServer extends UntypedServiceImplementation {\n  getProfile: handleUnaryCall<ProfileRequest, ProfileResponse>;\n  updateProfile: handleUnaryCall<ProfileUpdateRequest, ProfileUpdateResponse>;\n}\n\nexport interface UserProfileClient extends Client {\n  getProfile(\n    request: ProfileRequest,\n    callback: (error: ServiceError | null, response: ProfileResponse) => void,\n  ): ClientUnaryCall;\n  getProfile(\n    request: ProfileRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ProfileResponse) => void,\n  ): ClientUnaryCall;\n  getProfile(\n    request: ProfileRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ProfileResponse) => void,\n  ): ClientUnaryCall;\n  updateProfile(\n    request: ProfileUpdateRequest,\n    callback: (error: ServiceError | null, response: ProfileUpdateResponse) => void,\n  ): ClientUnaryCall;\n  updateProfile(\n    request: ProfileUpdateRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ProfileUpdateResponse) => void,\n  ): ClientUnaryCall;\n  updateProfile(\n    request: ProfileUpdateRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ProfileUpdateResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const UserProfileClient = makeGenericClientConstructor(\n  UserProfileService,\n  \"user_profile.UserProfile\",\n) as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): UserProfileClient;\n  service: typeof UserProfileService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"mappings":"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","names":["Status","Status","protobufPackage","statusFromJSON","statusToJSON","import_wire","import_grpc_js","isSet","protobufPackage","import_wire","import_grpc_js","isSet","protobufPackage","import_wire","import_grpc_js","isSet","isObject","protobufPackage","import_wire","RequestStatus","isSet","Status","protobufPackage","statusFromJSON","statusToJSON","import_wire","import_grpc_js","isSet","protobufPackage","import_wire","import_grpc_js","isSet"]}