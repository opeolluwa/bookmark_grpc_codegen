// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bookmark_collections.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package BookmarkCollection;

@kotlin.jvm.JvmName("-initializedeleteBookmarkCollectionRequest")
public inline fun deleteBookmarkCollectionRequest(block: BookmarkCollection.DeleteBookmarkCollectionRequestKt.Dsl.() -> kotlin.Unit): BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest =
  BookmarkCollection.DeleteBookmarkCollectionRequestKt.Dsl._create(BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `BookmarkCollection.DeleteBookmarkCollectionRequest`
 */
public object DeleteBookmarkCollectionRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest = _builder.build()

    /**
     * `string BookmarkCollection_id = 1;`
     */
    public var bookmarkCollectionId: kotlin.String
      @JvmName("getBookmarkCollectionId")
      get() = _builder.bookmarkCollectionId
      @JvmName("setBookmarkCollectionId")
      set(value) {
        _builder.bookmarkCollectionId = value
      }
    /**
     * `string BookmarkCollection_id = 1;`
     */
    public fun clearBookmarkCollectionId() {
      _builder.clearBookmarkCollectionId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest.copy(block: `BookmarkCollection`.DeleteBookmarkCollectionRequestKt.Dsl.() -> kotlin.Unit): BookmarkCollection.BookmarkCollections.DeleteBookmarkCollectionRequest =
  `BookmarkCollection`.DeleteBookmarkCollectionRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

