// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: health_check.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package health_check;

@kotlin.jvm.JvmName("-initializehealthCheckResponse")
public inline fun healthCheckResponse(block: health_check.HealthCheckResponseKt.Dsl.() -> kotlin.Unit): health_check.HealthCheckOuterClass.HealthCheckResponse =
  health_check.HealthCheckResponseKt.Dsl._create(health_check.HealthCheckOuterClass.HealthCheckResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `health_check.HealthCheckResponse`
 */
public object HealthCheckResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: health_check.HealthCheckOuterClass.HealthCheckResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: health_check.HealthCheckOuterClass.HealthCheckResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): health_check.HealthCheckOuterClass.HealthCheckResponse = _builder.build()

    /**
     * `.health_check.Status status = 1;`
     */
    public var status: health_check.HealthCheckOuterClass.Status
      @JvmName("getStatus")
      get() = _builder.status
      @JvmName("setStatus")
      set(value) {
        _builder.status = value
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.statusValue
      @JvmName("setStatusValue")
      set(value) {
        _builder.statusValue = value
      }
    /**
     * `.health_check.Status status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * `string message = 2;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.message
      @JvmName("setMessage")
      set(value) {
        _builder.message = value
      }
    /**
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun health_check.HealthCheckOuterClass.HealthCheckResponse.copy(block: `health_check`.HealthCheckResponseKt.Dsl.() -> kotlin.Unit): health_check.HealthCheckOuterClass.HealthCheckResponse =
  `health_check`.HealthCheckResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

