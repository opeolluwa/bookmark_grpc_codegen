// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bookmark_collections.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollections_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollections_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bookmark_5fcollections_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bookmark_5fcollections_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bookmark_5fcollections_2eproto;
namespace BookmarkCollection {
class BookmarkCollection;
struct BookmarkCollectionDefaultTypeInternal;
extern BookmarkCollectionDefaultTypeInternal _BookmarkCollection_default_instance_;
class BookmarkCollectionEntries;
struct BookmarkCollectionEntriesDefaultTypeInternal;
extern BookmarkCollectionEntriesDefaultTypeInternal _BookmarkCollectionEntries_default_instance_;
class BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse;
struct BookmarkCollectionEntries_MoreFieldsEntry_DoNotUseDefaultTypeInternal;
extern BookmarkCollectionEntries_MoreFieldsEntry_DoNotUseDefaultTypeInternal _BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse_default_instance_;
class DeleteBookmarkCollectionRequest;
struct DeleteBookmarkCollectionRequestDefaultTypeInternal;
extern DeleteBookmarkCollectionRequestDefaultTypeInternal _DeleteBookmarkCollectionRequest_default_instance_;
class DeleteBookmarkCollectionResponse;
struct DeleteBookmarkCollectionResponseDefaultTypeInternal;
extern DeleteBookmarkCollectionResponseDefaultTypeInternal _DeleteBookmarkCollectionResponse_default_instance_;
class GetBookmarkCollectionRequest;
struct GetBookmarkCollectionRequestDefaultTypeInternal;
extern GetBookmarkCollectionRequestDefaultTypeInternal _GetBookmarkCollectionRequest_default_instance_;
class GetBookmarkCollectionResponse;
struct GetBookmarkCollectionResponseDefaultTypeInternal;
extern GetBookmarkCollectionResponseDefaultTypeInternal _GetBookmarkCollectionResponse_default_instance_;
class ListBookmarkCollectionEntryRequest;
struct ListBookmarkCollectionEntryRequestDefaultTypeInternal;
extern ListBookmarkCollectionEntryRequestDefaultTypeInternal _ListBookmarkCollectionEntryRequest_default_instance_;
class ListBookmarkCollectionEntryResponse;
struct ListBookmarkCollectionEntryResponseDefaultTypeInternal;
extern ListBookmarkCollectionEntryResponseDefaultTypeInternal _ListBookmarkCollectionEntryResponse_default_instance_;
class ListBookmarkCollectionsRequest;
struct ListBookmarkCollectionsRequestDefaultTypeInternal;
extern ListBookmarkCollectionsRequestDefaultTypeInternal _ListBookmarkCollectionsRequest_default_instance_;
class ListBookmarkCollectionsResponse;
struct ListBookmarkCollectionsResponseDefaultTypeInternal;
extern ListBookmarkCollectionsResponseDefaultTypeInternal _ListBookmarkCollectionsResponse_default_instance_;
class NewBookmarkCollectionRequest;
struct NewBookmarkCollectionRequestDefaultTypeInternal;
extern NewBookmarkCollectionRequestDefaultTypeInternal _NewBookmarkCollectionRequest_default_instance_;
class NewBookmarkCollectionResponse;
struct NewBookmarkCollectionResponseDefaultTypeInternal;
extern NewBookmarkCollectionResponseDefaultTypeInternal _NewBookmarkCollectionResponse_default_instance_;
class UpdateBookmarkCollectionRequest;
struct UpdateBookmarkCollectionRequestDefaultTypeInternal;
extern UpdateBookmarkCollectionRequestDefaultTypeInternal _UpdateBookmarkCollectionRequest_default_instance_;
class UpdateBookmarkCollectionResponse;
struct UpdateBookmarkCollectionResponseDefaultTypeInternal;
extern UpdateBookmarkCollectionResponseDefaultTypeInternal _UpdateBookmarkCollectionResponse_default_instance_;
}  // namespace BookmarkCollection
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace BookmarkCollection {

// ===================================================================


// -------------------------------------------------------------------

class UpdateBookmarkCollectionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.UpdateBookmarkCollectionResponse) */ {
 public:
  inline UpdateBookmarkCollectionResponse() : UpdateBookmarkCollectionResponse(nullptr) {}
  ~UpdateBookmarkCollectionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBookmarkCollectionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBookmarkCollectionResponse(const UpdateBookmarkCollectionResponse& from) : UpdateBookmarkCollectionResponse(nullptr, from) {}
  inline UpdateBookmarkCollectionResponse(UpdateBookmarkCollectionResponse&& from) noexcept
      : UpdateBookmarkCollectionResponse(nullptr, std::move(from)) {}
  inline UpdateBookmarkCollectionResponse& operator=(const UpdateBookmarkCollectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBookmarkCollectionResponse& operator=(UpdateBookmarkCollectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBookmarkCollectionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBookmarkCollectionResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateBookmarkCollectionResponse*>(
        &_UpdateBookmarkCollectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UpdateBookmarkCollectionResponse& a, UpdateBookmarkCollectionResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateBookmarkCollectionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBookmarkCollectionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBookmarkCollectionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBookmarkCollectionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBookmarkCollectionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBookmarkCollectionResponse& from) { UpdateBookmarkCollectionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateBookmarkCollectionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.UpdateBookmarkCollectionResponse"; }

 protected:
  explicit UpdateBookmarkCollectionResponse(::google::protobuf::Arena* arena);
  UpdateBookmarkCollectionResponse(::google::protobuf::Arena* arena, const UpdateBookmarkCollectionResponse& from);
  UpdateBookmarkCollectionResponse(::google::protobuf::Arena* arena, UpdateBookmarkCollectionResponse&& from) noexcept
      : UpdateBookmarkCollectionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // string status = 2;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.UpdateBookmarkCollectionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      87, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateBookmarkCollectionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBookmarkCollectionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class UpdateBookmarkCollectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.UpdateBookmarkCollectionRequest) */ {
 public:
  inline UpdateBookmarkCollectionRequest() : UpdateBookmarkCollectionRequest(nullptr) {}
  ~UpdateBookmarkCollectionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBookmarkCollectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBookmarkCollectionRequest(const UpdateBookmarkCollectionRequest& from) : UpdateBookmarkCollectionRequest(nullptr, from) {}
  inline UpdateBookmarkCollectionRequest(UpdateBookmarkCollectionRequest&& from) noexcept
      : UpdateBookmarkCollectionRequest(nullptr, std::move(from)) {}
  inline UpdateBookmarkCollectionRequest& operator=(const UpdateBookmarkCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBookmarkCollectionRequest& operator=(UpdateBookmarkCollectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBookmarkCollectionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBookmarkCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBookmarkCollectionRequest*>(
        &_UpdateBookmarkCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UpdateBookmarkCollectionRequest& a, UpdateBookmarkCollectionRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateBookmarkCollectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBookmarkCollectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBookmarkCollectionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBookmarkCollectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBookmarkCollectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBookmarkCollectionRequest& from) { UpdateBookmarkCollectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateBookmarkCollectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.UpdateBookmarkCollectionRequest"; }

 protected:
  explicit UpdateBookmarkCollectionRequest(::google::protobuf::Arena* arena);
  UpdateBookmarkCollectionRequest(::google::protobuf::Arena* arena, const UpdateBookmarkCollectionRequest& from);
  UpdateBookmarkCollectionRequest(::google::protobuf::Arena* arena, UpdateBookmarkCollectionRequest&& from) noexcept
      : UpdateBookmarkCollectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string description = 3;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.UpdateBookmarkCollectionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      95, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateBookmarkCollectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBookmarkCollectionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class NewBookmarkCollectionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.NewBookmarkCollectionResponse) */ {
 public:
  inline NewBookmarkCollectionResponse() : NewBookmarkCollectionResponse(nullptr) {}
  ~NewBookmarkCollectionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewBookmarkCollectionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewBookmarkCollectionResponse(const NewBookmarkCollectionResponse& from) : NewBookmarkCollectionResponse(nullptr, from) {}
  inline NewBookmarkCollectionResponse(NewBookmarkCollectionResponse&& from) noexcept
      : NewBookmarkCollectionResponse(nullptr, std::move(from)) {}
  inline NewBookmarkCollectionResponse& operator=(const NewBookmarkCollectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewBookmarkCollectionResponse& operator=(NewBookmarkCollectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewBookmarkCollectionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewBookmarkCollectionResponse* internal_default_instance() {
    return reinterpret_cast<const NewBookmarkCollectionResponse*>(
        &_NewBookmarkCollectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NewBookmarkCollectionResponse& a, NewBookmarkCollectionResponse& b) { a.Swap(&b); }
  inline void Swap(NewBookmarkCollectionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewBookmarkCollectionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewBookmarkCollectionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewBookmarkCollectionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewBookmarkCollectionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewBookmarkCollectionResponse& from) { NewBookmarkCollectionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewBookmarkCollectionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.NewBookmarkCollectionResponse"; }

 protected:
  explicit NewBookmarkCollectionResponse(::google::protobuf::Arena* arena);
  NewBookmarkCollectionResponse(::google::protobuf::Arena* arena, const NewBookmarkCollectionResponse& from);
  NewBookmarkCollectionResponse(::google::protobuf::Arena* arena, NewBookmarkCollectionResponse&& from) noexcept
      : NewBookmarkCollectionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kUpdatedAtFieldNumber = 6,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 6;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.NewBookmarkCollectionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      113, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewBookmarkCollectionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewBookmarkCollectionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class NewBookmarkCollectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.NewBookmarkCollectionRequest) */ {
 public:
  inline NewBookmarkCollectionRequest() : NewBookmarkCollectionRequest(nullptr) {}
  ~NewBookmarkCollectionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewBookmarkCollectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewBookmarkCollectionRequest(const NewBookmarkCollectionRequest& from) : NewBookmarkCollectionRequest(nullptr, from) {}
  inline NewBookmarkCollectionRequest(NewBookmarkCollectionRequest&& from) noexcept
      : NewBookmarkCollectionRequest(nullptr, std::move(from)) {}
  inline NewBookmarkCollectionRequest& operator=(const NewBookmarkCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewBookmarkCollectionRequest& operator=(NewBookmarkCollectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewBookmarkCollectionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewBookmarkCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const NewBookmarkCollectionRequest*>(
        &_NewBookmarkCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NewBookmarkCollectionRequest& a, NewBookmarkCollectionRequest& b) { a.Swap(&b); }
  inline void Swap(NewBookmarkCollectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewBookmarkCollectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewBookmarkCollectionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewBookmarkCollectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewBookmarkCollectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewBookmarkCollectionRequest& from) { NewBookmarkCollectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewBookmarkCollectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.NewBookmarkCollectionRequest"; }

 protected:
  explicit NewBookmarkCollectionRequest(::google::protobuf::Arena* arena);
  NewBookmarkCollectionRequest(::google::protobuf::Arena* arena, const NewBookmarkCollectionRequest& from);
  NewBookmarkCollectionRequest(::google::protobuf::Arena* arena, NewBookmarkCollectionRequest&& from) noexcept
      : NewBookmarkCollectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.NewBookmarkCollectionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewBookmarkCollectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewBookmarkCollectionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class ListBookmarkCollectionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.ListBookmarkCollectionsRequest) */ {
 public:
  inline ListBookmarkCollectionsRequest() : ListBookmarkCollectionsRequest(nullptr) {}
  ~ListBookmarkCollectionsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBookmarkCollectionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBookmarkCollectionsRequest(const ListBookmarkCollectionsRequest& from) : ListBookmarkCollectionsRequest(nullptr, from) {}
  inline ListBookmarkCollectionsRequest(ListBookmarkCollectionsRequest&& from) noexcept
      : ListBookmarkCollectionsRequest(nullptr, std::move(from)) {}
  inline ListBookmarkCollectionsRequest& operator=(const ListBookmarkCollectionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBookmarkCollectionsRequest& operator=(ListBookmarkCollectionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBookmarkCollectionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBookmarkCollectionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListBookmarkCollectionsRequest*>(
        &_ListBookmarkCollectionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ListBookmarkCollectionsRequest& a, ListBookmarkCollectionsRequest& b) { a.Swap(&b); }
  inline void Swap(ListBookmarkCollectionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBookmarkCollectionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBookmarkCollectionsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListBookmarkCollectionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBookmarkCollectionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBookmarkCollectionsRequest& from) { ListBookmarkCollectionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListBookmarkCollectionsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.ListBookmarkCollectionsRequest"; }

 protected:
  explicit ListBookmarkCollectionsRequest(::google::protobuf::Arena* arena);
  ListBookmarkCollectionsRequest(::google::protobuf::Arena* arena, const ListBookmarkCollectionsRequest& from);
  ListBookmarkCollectionsRequest(::google::protobuf::Arena* arena, ListBookmarkCollectionsRequest&& from) noexcept
      : ListBookmarkCollectionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
  };
  // uint32 page = 1;
  void clear_page() ;
  ::uint32_t page() const;
  void set_page(::uint32_t value);

  private:
  ::uint32_t _internal_page() const;
  void _internal_set_page(::uint32_t value);

  public:
  // uint32 page_size = 2;
  void clear_page_size() ;
  ::uint32_t page_size() const;
  void set_page_size(::uint32_t value);

  private:
  ::uint32_t _internal_page_size() const;
  void _internal_set_page_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.ListBookmarkCollectionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListBookmarkCollectionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBookmarkCollectionsRequest& from_msg);
    ::uint32_t page_;
    ::uint32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class ListBookmarkCollectionEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.ListBookmarkCollectionEntryRequest) */ {
 public:
  inline ListBookmarkCollectionEntryRequest() : ListBookmarkCollectionEntryRequest(nullptr) {}
  ~ListBookmarkCollectionEntryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBookmarkCollectionEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBookmarkCollectionEntryRequest(const ListBookmarkCollectionEntryRequest& from) : ListBookmarkCollectionEntryRequest(nullptr, from) {}
  inline ListBookmarkCollectionEntryRequest(ListBookmarkCollectionEntryRequest&& from) noexcept
      : ListBookmarkCollectionEntryRequest(nullptr, std::move(from)) {}
  inline ListBookmarkCollectionEntryRequest& operator=(const ListBookmarkCollectionEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBookmarkCollectionEntryRequest& operator=(ListBookmarkCollectionEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBookmarkCollectionEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBookmarkCollectionEntryRequest* internal_default_instance() {
    return reinterpret_cast<const ListBookmarkCollectionEntryRequest*>(
        &_ListBookmarkCollectionEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListBookmarkCollectionEntryRequest& a, ListBookmarkCollectionEntryRequest& b) { a.Swap(&b); }
  inline void Swap(ListBookmarkCollectionEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBookmarkCollectionEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBookmarkCollectionEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListBookmarkCollectionEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBookmarkCollectionEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBookmarkCollectionEntryRequest& from) { ListBookmarkCollectionEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListBookmarkCollectionEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.ListBookmarkCollectionEntryRequest"; }

 protected:
  explicit ListBookmarkCollectionEntryRequest(::google::protobuf::Arena* arena);
  ListBookmarkCollectionEntryRequest(::google::protobuf::Arena* arena, const ListBookmarkCollectionEntryRequest& from);
  ListBookmarkCollectionEntryRequest(::google::protobuf::Arena* arena, ListBookmarkCollectionEntryRequest&& from) noexcept
      : ListBookmarkCollectionEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kPageFieldNumber = 4,
    kPageSizeFieldNumber = 5,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // uint32 page = 4;
  void clear_page() ;
  ::uint32_t page() const;
  void set_page(::uint32_t value);

  private:
  ::uint32_t _internal_page() const;
  void _internal_set_page(::uint32_t value);

  public:
  // uint32 page_size = 5;
  void clear_page_size() ;
  ::uint32_t page_size() const;
  void set_page_size(::uint32_t value);

  private:
  ::uint32_t _internal_page_size() const;
  void _internal_set_page_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.ListBookmarkCollectionEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 0,
      83, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListBookmarkCollectionEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBookmarkCollectionEntryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::uint32_t page_;
    ::uint32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class GetBookmarkCollectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.GetBookmarkCollectionRequest) */ {
 public:
  inline GetBookmarkCollectionRequest() : GetBookmarkCollectionRequest(nullptr) {}
  ~GetBookmarkCollectionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBookmarkCollectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBookmarkCollectionRequest(const GetBookmarkCollectionRequest& from) : GetBookmarkCollectionRequest(nullptr, from) {}
  inline GetBookmarkCollectionRequest(GetBookmarkCollectionRequest&& from) noexcept
      : GetBookmarkCollectionRequest(nullptr, std::move(from)) {}
  inline GetBookmarkCollectionRequest& operator=(const GetBookmarkCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBookmarkCollectionRequest& operator=(GetBookmarkCollectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBookmarkCollectionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBookmarkCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const GetBookmarkCollectionRequest*>(
        &_GetBookmarkCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetBookmarkCollectionRequest& a, GetBookmarkCollectionRequest& b) { a.Swap(&b); }
  inline void Swap(GetBookmarkCollectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBookmarkCollectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBookmarkCollectionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBookmarkCollectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBookmarkCollectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBookmarkCollectionRequest& from) { GetBookmarkCollectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBookmarkCollectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.GetBookmarkCollectionRequest"; }

 protected:
  explicit GetBookmarkCollectionRequest(::google::protobuf::Arena* arena);
  GetBookmarkCollectionRequest(::google::protobuf::Arena* arena, const GetBookmarkCollectionRequest& from);
  GetBookmarkCollectionRequest(::google::protobuf::Arena* arena, GetBookmarkCollectionRequest&& from) noexcept
      : GetBookmarkCollectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.GetBookmarkCollectionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      77, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBookmarkCollectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBookmarkCollectionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class DeleteBookmarkCollectionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.DeleteBookmarkCollectionResponse) */ {
 public:
  inline DeleteBookmarkCollectionResponse() : DeleteBookmarkCollectionResponse(nullptr) {}
  ~DeleteBookmarkCollectionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBookmarkCollectionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteBookmarkCollectionResponse(const DeleteBookmarkCollectionResponse& from) : DeleteBookmarkCollectionResponse(nullptr, from) {}
  inline DeleteBookmarkCollectionResponse(DeleteBookmarkCollectionResponse&& from) noexcept
      : DeleteBookmarkCollectionResponse(nullptr, std::move(from)) {}
  inline DeleteBookmarkCollectionResponse& operator=(const DeleteBookmarkCollectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBookmarkCollectionResponse& operator=(DeleteBookmarkCollectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBookmarkCollectionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBookmarkCollectionResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteBookmarkCollectionResponse*>(
        &_DeleteBookmarkCollectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(DeleteBookmarkCollectionResponse& a, DeleteBookmarkCollectionResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteBookmarkCollectionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBookmarkCollectionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBookmarkCollectionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteBookmarkCollectionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBookmarkCollectionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteBookmarkCollectionResponse& from) { DeleteBookmarkCollectionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteBookmarkCollectionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.DeleteBookmarkCollectionResponse"; }

 protected:
  explicit DeleteBookmarkCollectionResponse(::google::protobuf::Arena* arena);
  DeleteBookmarkCollectionResponse(::google::protobuf::Arena* arena, const DeleteBookmarkCollectionResponse& from);
  DeleteBookmarkCollectionResponse(::google::protobuf::Arena* arena, DeleteBookmarkCollectionResponse&& from) noexcept
      : DeleteBookmarkCollectionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kMessageFieldNumber = 2,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.DeleteBookmarkCollectionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      88, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteBookmarkCollectionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteBookmarkCollectionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class DeleteBookmarkCollectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.DeleteBookmarkCollectionRequest) */ {
 public:
  inline DeleteBookmarkCollectionRequest() : DeleteBookmarkCollectionRequest(nullptr) {}
  ~DeleteBookmarkCollectionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBookmarkCollectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteBookmarkCollectionRequest(const DeleteBookmarkCollectionRequest& from) : DeleteBookmarkCollectionRequest(nullptr, from) {}
  inline DeleteBookmarkCollectionRequest(DeleteBookmarkCollectionRequest&& from) noexcept
      : DeleteBookmarkCollectionRequest(nullptr, std::move(from)) {}
  inline DeleteBookmarkCollectionRequest& operator=(const DeleteBookmarkCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBookmarkCollectionRequest& operator=(DeleteBookmarkCollectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBookmarkCollectionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBookmarkCollectionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBookmarkCollectionRequest*>(
        &_DeleteBookmarkCollectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DeleteBookmarkCollectionRequest& a, DeleteBookmarkCollectionRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteBookmarkCollectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBookmarkCollectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBookmarkCollectionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteBookmarkCollectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBookmarkCollectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteBookmarkCollectionRequest& from) { DeleteBookmarkCollectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteBookmarkCollectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.DeleteBookmarkCollectionRequest"; }

 protected:
  explicit DeleteBookmarkCollectionRequest(::google::protobuf::Arena* arena);
  DeleteBookmarkCollectionRequest(::google::protobuf::Arena* arena, const DeleteBookmarkCollectionRequest& from);
  DeleteBookmarkCollectionRequest(::google::protobuf::Arena* arena, DeleteBookmarkCollectionRequest&& from) noexcept
      : DeleteBookmarkCollectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.DeleteBookmarkCollectionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteBookmarkCollectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteBookmarkCollectionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse*>(
        &_BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      77, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class BookmarkCollection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.BookmarkCollection) */ {
 public:
  inline BookmarkCollection() : BookmarkCollection(nullptr) {}
  ~BookmarkCollection() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BookmarkCollection(
      ::google::protobuf::internal::ConstantInitialized);

  inline BookmarkCollection(const BookmarkCollection& from) : BookmarkCollection(nullptr, from) {}
  inline BookmarkCollection(BookmarkCollection&& from) noexcept
      : BookmarkCollection(nullptr, std::move(from)) {}
  inline BookmarkCollection& operator=(const BookmarkCollection& from) {
    CopyFrom(from);
    return *this;
  }
  inline BookmarkCollection& operator=(BookmarkCollection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BookmarkCollection& default_instance() {
    return *internal_default_instance();
  }
  static inline const BookmarkCollection* internal_default_instance() {
    return reinterpret_cast<const BookmarkCollection*>(
        &_BookmarkCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(BookmarkCollection& a, BookmarkCollection& b) { a.Swap(&b); }
  inline void Swap(BookmarkCollection* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BookmarkCollection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BookmarkCollection* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BookmarkCollection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BookmarkCollection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BookmarkCollection& from) { BookmarkCollection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BookmarkCollection* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.BookmarkCollection"; }

 protected:
  explicit BookmarkCollection(::google::protobuf::Arena* arena);
  BookmarkCollection(::google::protobuf::Arena* arena, const BookmarkCollection& from);
  BookmarkCollection(::google::protobuf::Arena* arena, BookmarkCollection&& from) noexcept
      : BookmarkCollection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCreatedAtFieldNumber = 4,
    kUpdatedAtFieldNumber = 5,
  };
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_at = 4;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 5;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.BookmarkCollection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      102, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BookmarkCollection_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BookmarkCollection& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class ListBookmarkCollectionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.ListBookmarkCollectionsResponse) */ {
 public:
  inline ListBookmarkCollectionsResponse() : ListBookmarkCollectionsResponse(nullptr) {}
  ~ListBookmarkCollectionsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBookmarkCollectionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBookmarkCollectionsResponse(const ListBookmarkCollectionsResponse& from) : ListBookmarkCollectionsResponse(nullptr, from) {}
  inline ListBookmarkCollectionsResponse(ListBookmarkCollectionsResponse&& from) noexcept
      : ListBookmarkCollectionsResponse(nullptr, std::move(from)) {}
  inline ListBookmarkCollectionsResponse& operator=(const ListBookmarkCollectionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBookmarkCollectionsResponse& operator=(ListBookmarkCollectionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBookmarkCollectionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBookmarkCollectionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBookmarkCollectionsResponse*>(
        &_ListBookmarkCollectionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ListBookmarkCollectionsResponse& a, ListBookmarkCollectionsResponse& b) { a.Swap(&b); }
  inline void Swap(ListBookmarkCollectionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBookmarkCollectionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBookmarkCollectionsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListBookmarkCollectionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBookmarkCollectionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBookmarkCollectionsResponse& from) { ListBookmarkCollectionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListBookmarkCollectionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.ListBookmarkCollectionsResponse"; }

 protected:
  explicit ListBookmarkCollectionsResponse(::google::protobuf::Arena* arena);
  ListBookmarkCollectionsResponse(::google::protobuf::Arena* arena, const ListBookmarkCollectionsResponse& from);
  ListBookmarkCollectionsResponse(::google::protobuf::Arena* arena, ListBookmarkCollectionsResponse&& from) noexcept
      : ListBookmarkCollectionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .BookmarkCollection.BookmarkCollection BookmarkCollections = 1;
  int bookmarkcollections_size() const;
  private:
  int _internal_bookmarkcollections_size() const;

  public:
  void clear_bookmarkcollections() ;
  ::BookmarkCollection::BookmarkCollection* mutable_bookmarkcollections(int index);
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>* mutable_bookmarkcollections();

  private:
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>& _internal_bookmarkcollections() const;
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>* _internal_mutable_bookmarkcollections();
  public:
  const ::BookmarkCollection::BookmarkCollection& bookmarkcollections(int index) const;
  ::BookmarkCollection::BookmarkCollection* add_bookmarkcollections();
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>& bookmarkcollections() const;
  // uint32 total_count = 2;
  void clear_total_count() ;
  ::uint32_t total_count() const;
  void set_total_count(::uint32_t value);

  private:
  ::uint32_t _internal_total_count() const;
  void _internal_set_total_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.ListBookmarkCollectionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListBookmarkCollectionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBookmarkCollectionsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BookmarkCollection::BookmarkCollection > bookmarkcollections_;
    ::uint32_t total_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class BookmarkCollectionEntries final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.BookmarkCollectionEntries) */ {
 public:
  inline BookmarkCollectionEntries() : BookmarkCollectionEntries(nullptr) {}
  ~BookmarkCollectionEntries() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BookmarkCollectionEntries(
      ::google::protobuf::internal::ConstantInitialized);

  inline BookmarkCollectionEntries(const BookmarkCollectionEntries& from) : BookmarkCollectionEntries(nullptr, from) {}
  inline BookmarkCollectionEntries(BookmarkCollectionEntries&& from) noexcept
      : BookmarkCollectionEntries(nullptr, std::move(from)) {}
  inline BookmarkCollectionEntries& operator=(const BookmarkCollectionEntries& from) {
    CopyFrom(from);
    return *this;
  }
  inline BookmarkCollectionEntries& operator=(BookmarkCollectionEntries&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BookmarkCollectionEntries& default_instance() {
    return *internal_default_instance();
  }
  static inline const BookmarkCollectionEntries* internal_default_instance() {
    return reinterpret_cast<const BookmarkCollectionEntries*>(
        &_BookmarkCollectionEntries_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BookmarkCollectionEntries& a, BookmarkCollectionEntries& b) { a.Swap(&b); }
  inline void Swap(BookmarkCollectionEntries* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BookmarkCollectionEntries* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BookmarkCollectionEntries* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BookmarkCollectionEntries>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BookmarkCollectionEntries& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BookmarkCollectionEntries& from) { BookmarkCollectionEntries::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BookmarkCollectionEntries* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.BookmarkCollectionEntries"; }

 protected:
  explicit BookmarkCollectionEntries(::google::protobuf::Arena* arena);
  BookmarkCollectionEntries(::google::protobuf::Arena* arena, const BookmarkCollectionEntries& from);
  BookmarkCollectionEntries(::google::protobuf::Arena* arena, BookmarkCollectionEntries&& from) noexcept
      : BookmarkCollectionEntries(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMoreFieldsFieldNumber = 6,
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kBookmarkCollectionIdFieldNumber = 5,
  };
  // map<string, string> more_fields = 6;
  int more_fields_size() const;
  private:
  int _internal_more_fields_size() const;

  public:
  void clear_more_fields() ;
  const ::google::protobuf::Map<std::string, std::string>& more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_more_fields();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_more_fields();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_at = 3;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 4;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // string BookmarkCollection_id = 5;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.BookmarkCollectionEntries)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      121, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BookmarkCollectionEntries_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BookmarkCollectionEntries& from_msg);
    ::google::protobuf::internal::MapField<BookmarkCollectionEntries_MoreFieldsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        more_fields_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class ListBookmarkCollectionEntryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.ListBookmarkCollectionEntryResponse) */ {
 public:
  inline ListBookmarkCollectionEntryResponse() : ListBookmarkCollectionEntryResponse(nullptr) {}
  ~ListBookmarkCollectionEntryResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBookmarkCollectionEntryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBookmarkCollectionEntryResponse(const ListBookmarkCollectionEntryResponse& from) : ListBookmarkCollectionEntryResponse(nullptr, from) {}
  inline ListBookmarkCollectionEntryResponse(ListBookmarkCollectionEntryResponse&& from) noexcept
      : ListBookmarkCollectionEntryResponse(nullptr, std::move(from)) {}
  inline ListBookmarkCollectionEntryResponse& operator=(const ListBookmarkCollectionEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBookmarkCollectionEntryResponse& operator=(ListBookmarkCollectionEntryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBookmarkCollectionEntryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBookmarkCollectionEntryResponse* internal_default_instance() {
    return reinterpret_cast<const ListBookmarkCollectionEntryResponse*>(
        &_ListBookmarkCollectionEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ListBookmarkCollectionEntryResponse& a, ListBookmarkCollectionEntryResponse& b) { a.Swap(&b); }
  inline void Swap(ListBookmarkCollectionEntryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBookmarkCollectionEntryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBookmarkCollectionEntryResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListBookmarkCollectionEntryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBookmarkCollectionEntryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBookmarkCollectionEntryResponse& from) { ListBookmarkCollectionEntryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListBookmarkCollectionEntryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.ListBookmarkCollectionEntryResponse"; }

 protected:
  explicit ListBookmarkCollectionEntryResponse(::google::protobuf::Arena* arena);
  ListBookmarkCollectionEntryResponse(::google::protobuf::Arena* arena, const ListBookmarkCollectionEntryResponse& from);
  ListBookmarkCollectionEntryResponse(::google::protobuf::Arena* arena, ListBookmarkCollectionEntryResponse&& from) noexcept
      : ListBookmarkCollectionEntryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBookmarkCollectionEntriesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .BookmarkCollection.BookmarkCollectionEntries BookmarkCollection_entries = 1;
  int bookmarkcollection_entries_size() const;
  private:
  int _internal_bookmarkcollection_entries_size() const;

  public:
  void clear_bookmarkcollection_entries() ;
  ::BookmarkCollection::BookmarkCollectionEntries* mutable_bookmarkcollection_entries(int index);
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* mutable_bookmarkcollection_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& _internal_bookmarkcollection_entries() const;
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* _internal_mutable_bookmarkcollection_entries();
  public:
  const ::BookmarkCollection::BookmarkCollectionEntries& bookmarkcollection_entries(int index) const;
  ::BookmarkCollection::BookmarkCollectionEntries* add_bookmarkcollection_entries();
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& bookmarkcollection_entries() const;
  // uint32 total_count = 2;
  void clear_total_count() ;
  ::uint32_t total_count() const;
  void set_total_count(::uint32_t value);

  private:
  ::uint32_t _internal_total_count() const;
  void _internal_set_total_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.ListBookmarkCollectionEntryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListBookmarkCollectionEntryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBookmarkCollectionEntryResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BookmarkCollection::BookmarkCollectionEntries > bookmarkcollection_entries_;
    ::uint32_t total_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};
// -------------------------------------------------------------------

class GetBookmarkCollectionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BookmarkCollection.GetBookmarkCollectionResponse) */ {
 public:
  inline GetBookmarkCollectionResponse() : GetBookmarkCollectionResponse(nullptr) {}
  ~GetBookmarkCollectionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBookmarkCollectionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBookmarkCollectionResponse(const GetBookmarkCollectionResponse& from) : GetBookmarkCollectionResponse(nullptr, from) {}
  inline GetBookmarkCollectionResponse(GetBookmarkCollectionResponse&& from) noexcept
      : GetBookmarkCollectionResponse(nullptr, std::move(from)) {}
  inline GetBookmarkCollectionResponse& operator=(const GetBookmarkCollectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBookmarkCollectionResponse& operator=(GetBookmarkCollectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBookmarkCollectionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBookmarkCollectionResponse* internal_default_instance() {
    return reinterpret_cast<const GetBookmarkCollectionResponse*>(
        &_GetBookmarkCollectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetBookmarkCollectionResponse& a, GetBookmarkCollectionResponse& b) { a.Swap(&b); }
  inline void Swap(GetBookmarkCollectionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBookmarkCollectionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBookmarkCollectionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBookmarkCollectionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBookmarkCollectionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBookmarkCollectionResponse& from) { GetBookmarkCollectionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBookmarkCollectionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BookmarkCollection.GetBookmarkCollectionResponse"; }

 protected:
  explicit GetBookmarkCollectionResponse(::google::protobuf::Arena* arena);
  GetBookmarkCollectionResponse(::google::protobuf::Arena* arena, const GetBookmarkCollectionResponse& from);
  GetBookmarkCollectionResponse(::google::protobuf::Arena* arena, GetBookmarkCollectionResponse&& from) noexcept
      : GetBookmarkCollectionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 7,
    kBookmarkCollectionIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCreatedAtFieldNumber = 4,
    kUpdatedAtFieldNumber = 5,
  };
  // repeated .BookmarkCollection.BookmarkCollectionEntries entries = 7;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::BookmarkCollection::BookmarkCollectionEntries* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* _internal_mutable_entries();
  public:
  const ::BookmarkCollection::BookmarkCollectionEntries& entries(int index) const;
  ::BookmarkCollection::BookmarkCollectionEntries* add_entries();
  const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& entries() const;
  // string BookmarkCollection_id = 1;
  void clear_bookmarkcollection_id() ;
  const std::string& bookmarkcollection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmarkcollection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmarkcollection_id();
  PROTOBUF_NODISCARD std::string* release_bookmarkcollection_id();
  void set_allocated_bookmarkcollection_id(std::string* value);

  private:
  const std::string& _internal_bookmarkcollection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmarkcollection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmarkcollection_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_at = 4;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 5;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // @@protoc_insertion_point(class_scope:BookmarkCollection.GetBookmarkCollectionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      113, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBookmarkCollectionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBookmarkCollectionResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BookmarkCollection::BookmarkCollectionEntries > entries_;
    ::google::protobuf::internal::ArenaStringPtr bookmarkcollection_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollections_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BookmarkCollectionEntries

// string title = 1;
inline void BookmarkCollectionEntries::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& BookmarkCollectionEntries::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollectionEntries.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollectionEntries::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollectionEntries.title)
}
inline std::string* BookmarkCollectionEntries::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollectionEntries.title)
  return _s;
}
inline const std::string& BookmarkCollectionEntries::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void BookmarkCollectionEntries::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* BookmarkCollectionEntries::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* BookmarkCollectionEntries::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollectionEntries.title)
  return _impl_.title_.Release();
}
inline void BookmarkCollectionEntries::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollectionEntries.title)
}

// string description = 2;
inline void BookmarkCollectionEntries::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& BookmarkCollectionEntries::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollectionEntries.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollectionEntries::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollectionEntries.description)
}
inline std::string* BookmarkCollectionEntries::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollectionEntries.description)
  return _s;
}
inline const std::string& BookmarkCollectionEntries::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void BookmarkCollectionEntries::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* BookmarkCollectionEntries::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* BookmarkCollectionEntries::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollectionEntries.description)
  return _impl_.description_.Release();
}
inline void BookmarkCollectionEntries::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollectionEntries.description)
}

// string created_at = 3;
inline void BookmarkCollectionEntries::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& BookmarkCollectionEntries::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollectionEntries.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollectionEntries::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollectionEntries.created_at)
}
inline std::string* BookmarkCollectionEntries::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollectionEntries.created_at)
  return _s;
}
inline const std::string& BookmarkCollectionEntries::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void BookmarkCollectionEntries::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* BookmarkCollectionEntries::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* BookmarkCollectionEntries::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollectionEntries.created_at)
  return _impl_.created_at_.Release();
}
inline void BookmarkCollectionEntries::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_at_.IsDefault()) {
          _impl_.created_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollectionEntries.created_at)
}

// string updated_at = 4;
inline void BookmarkCollectionEntries::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& BookmarkCollectionEntries::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollectionEntries.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollectionEntries::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollectionEntries.updated_at)
}
inline std::string* BookmarkCollectionEntries::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollectionEntries.updated_at)
  return _s;
}
inline const std::string& BookmarkCollectionEntries::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void BookmarkCollectionEntries::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* BookmarkCollectionEntries::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* BookmarkCollectionEntries::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollectionEntries.updated_at)
  return _impl_.updated_at_.Release();
}
inline void BookmarkCollectionEntries::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updated_at_.IsDefault()) {
          _impl_.updated_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollectionEntries.updated_at)
}

// string BookmarkCollection_id = 5;
inline void BookmarkCollectionEntries::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& BookmarkCollectionEntries::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollectionEntries.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollectionEntries::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollectionEntries.BookmarkCollection_id)
}
inline std::string* BookmarkCollectionEntries::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollectionEntries.BookmarkCollection_id)
  return _s;
}
inline const std::string& BookmarkCollectionEntries::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void BookmarkCollectionEntries::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* BookmarkCollectionEntries::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* BookmarkCollectionEntries::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollectionEntries.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void BookmarkCollectionEntries::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollectionEntries.BookmarkCollection_id)
}

// map<string, string> more_fields = 6;
inline int BookmarkCollectionEntries::_internal_more_fields_size() const {
  return _internal_more_fields().size();
}
inline int BookmarkCollectionEntries::more_fields_size() const {
  return _internal_more_fields_size();
}
inline void BookmarkCollectionEntries::clear_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_fields_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& BookmarkCollectionEntries::_internal_more_fields() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.more_fields_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& BookmarkCollectionEntries::more_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BookmarkCollection.BookmarkCollectionEntries.more_fields)
  return _internal_more_fields();
}
inline ::google::protobuf::Map<std::string, std::string>* BookmarkCollectionEntries::_internal_mutable_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.more_fields_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* BookmarkCollectionEntries::mutable_more_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BookmarkCollection.BookmarkCollectionEntries.more_fields)
  return _internal_mutable_more_fields();
}

// -------------------------------------------------------------------

// NewBookmarkCollectionRequest

// string name = 1;
inline void NewBookmarkCollectionRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionRequest.name)
}
inline std::string* NewBookmarkCollectionRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionRequest.name)
  return _s;
}
inline const std::string& NewBookmarkCollectionRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NewBookmarkCollectionRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionRequest.name)
  return _impl_.name_.Release();
}
inline void NewBookmarkCollectionRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionRequest.name)
}

// string description = 2;
inline void NewBookmarkCollectionRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionRequest.description)
}
inline std::string* NewBookmarkCollectionRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionRequest.description)
  return _s;
}
inline const std::string& NewBookmarkCollectionRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void NewBookmarkCollectionRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionRequest.description)
  return _impl_.description_.Release();
}
inline void NewBookmarkCollectionRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionRequest.description)
}

// -------------------------------------------------------------------

// NewBookmarkCollectionResponse

// string BookmarkCollection_id = 1;
inline void NewBookmarkCollectionResponse::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionResponse::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionResponse.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionResponse::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionResponse.BookmarkCollection_id)
}
inline std::string* NewBookmarkCollectionResponse::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionResponse.BookmarkCollection_id)
  return _s;
}
inline const std::string& NewBookmarkCollectionResponse::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void NewBookmarkCollectionResponse::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionResponse::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionResponse::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionResponse.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void NewBookmarkCollectionResponse::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionResponse.BookmarkCollection_id)
}

// string name = 3;
inline void NewBookmarkCollectionResponse::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionResponse::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionResponse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionResponse::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionResponse.name)
}
inline std::string* NewBookmarkCollectionResponse::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionResponse.name)
  return _s;
}
inline const std::string& NewBookmarkCollectionResponse::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NewBookmarkCollectionResponse::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionResponse::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionResponse::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionResponse.name)
  return _impl_.name_.Release();
}
inline void NewBookmarkCollectionResponse::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionResponse.name)
}

// string description = 4;
inline void NewBookmarkCollectionResponse::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionResponse.description)
}
inline std::string* NewBookmarkCollectionResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionResponse.description)
  return _s;
}
inline const std::string& NewBookmarkCollectionResponse::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void NewBookmarkCollectionResponse::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionResponse::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionResponse::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionResponse.description)
  return _impl_.description_.Release();
}
inline void NewBookmarkCollectionResponse::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionResponse.description)
}

// string created_at = 5;
inline void NewBookmarkCollectionResponse::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionResponse::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionResponse.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionResponse::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionResponse.created_at)
}
inline std::string* NewBookmarkCollectionResponse::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionResponse.created_at)
  return _s;
}
inline const std::string& NewBookmarkCollectionResponse::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void NewBookmarkCollectionResponse::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionResponse::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionResponse::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionResponse.created_at)
  return _impl_.created_at_.Release();
}
inline void NewBookmarkCollectionResponse::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_at_.IsDefault()) {
          _impl_.created_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionResponse.created_at)
}

// string updated_at = 6;
inline void NewBookmarkCollectionResponse::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionResponse::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.NewBookmarkCollectionResponse.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionResponse::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.NewBookmarkCollectionResponse.updated_at)
}
inline std::string* NewBookmarkCollectionResponse::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.NewBookmarkCollectionResponse.updated_at)
  return _s;
}
inline const std::string& NewBookmarkCollectionResponse::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void NewBookmarkCollectionResponse::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionResponse::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionResponse::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.NewBookmarkCollectionResponse.updated_at)
  return _impl_.updated_at_.Release();
}
inline void NewBookmarkCollectionResponse::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updated_at_.IsDefault()) {
          _impl_.updated_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.NewBookmarkCollectionResponse.updated_at)
}

// -------------------------------------------------------------------

// GetBookmarkCollectionRequest

// string BookmarkCollection_id = 1;
inline void GetBookmarkCollectionRequest::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionRequest::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionRequest.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionRequest::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionRequest.BookmarkCollection_id)
}
inline std::string* GetBookmarkCollectionRequest::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionRequest.BookmarkCollection_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionRequest::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void GetBookmarkCollectionRequest::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionRequest::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionRequest::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionRequest.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void GetBookmarkCollectionRequest::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionRequest.BookmarkCollection_id)
}

// -------------------------------------------------------------------

// GetBookmarkCollectionResponse

// string BookmarkCollection_id = 1;
inline void GetBookmarkCollectionResponse::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionResponse::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionResponse::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionResponse.BookmarkCollection_id)
}
inline std::string* GetBookmarkCollectionResponse::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.BookmarkCollection_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionResponse::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void GetBookmarkCollectionResponse::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionResponse::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionResponse::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionResponse.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void GetBookmarkCollectionResponse::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionResponse.BookmarkCollection_id)
}

// string name = 2;
inline void GetBookmarkCollectionResponse::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionResponse::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionResponse::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionResponse.name)
}
inline std::string* GetBookmarkCollectionResponse::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.name)
  return _s;
}
inline const std::string& GetBookmarkCollectionResponse::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GetBookmarkCollectionResponse::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionResponse::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionResponse::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionResponse.name)
  return _impl_.name_.Release();
}
inline void GetBookmarkCollectionResponse::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionResponse.name)
}

// string description = 3;
inline void GetBookmarkCollectionResponse::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionResponse.description)
}
inline std::string* GetBookmarkCollectionResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.description)
  return _s;
}
inline const std::string& GetBookmarkCollectionResponse::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void GetBookmarkCollectionResponse::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionResponse::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionResponse::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionResponse.description)
  return _impl_.description_.Release();
}
inline void GetBookmarkCollectionResponse::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionResponse.description)
}

// string created_at = 4;
inline void GetBookmarkCollectionResponse::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionResponse::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionResponse::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionResponse.created_at)
}
inline std::string* GetBookmarkCollectionResponse::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.created_at)
  return _s;
}
inline const std::string& GetBookmarkCollectionResponse::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void GetBookmarkCollectionResponse::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionResponse::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionResponse::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionResponse.created_at)
  return _impl_.created_at_.Release();
}
inline void GetBookmarkCollectionResponse::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_at_.IsDefault()) {
          _impl_.created_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionResponse.created_at)
}

// string updated_at = 5;
inline void GetBookmarkCollectionResponse::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionResponse::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionResponse::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.GetBookmarkCollectionResponse.updated_at)
}
inline std::string* GetBookmarkCollectionResponse::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.updated_at)
  return _s;
}
inline const std::string& GetBookmarkCollectionResponse::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void GetBookmarkCollectionResponse::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionResponse::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionResponse::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.GetBookmarkCollectionResponse.updated_at)
  return _impl_.updated_at_.Release();
}
inline void GetBookmarkCollectionResponse::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updated_at_.IsDefault()) {
          _impl_.updated_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.GetBookmarkCollectionResponse.updated_at)
}

// repeated .BookmarkCollection.BookmarkCollectionEntries entries = 7;
inline int GetBookmarkCollectionResponse::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int GetBookmarkCollectionResponse::entries_size() const {
  return _internal_entries_size();
}
inline void GetBookmarkCollectionResponse::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::BookmarkCollection::BookmarkCollectionEntries* GetBookmarkCollectionResponse::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.GetBookmarkCollectionResponse.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* GetBookmarkCollectionResponse::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BookmarkCollection.GetBookmarkCollectionResponse.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::BookmarkCollection::BookmarkCollectionEntries& GetBookmarkCollectionResponse::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.GetBookmarkCollectionResponse.entries)
  return _internal_entries().Get(index);
}
inline ::BookmarkCollection::BookmarkCollectionEntries* GetBookmarkCollectionResponse::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BookmarkCollection::BookmarkCollectionEntries* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:BookmarkCollection.GetBookmarkCollectionResponse.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& GetBookmarkCollectionResponse::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BookmarkCollection.GetBookmarkCollectionResponse.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>&
GetBookmarkCollectionResponse::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>*
GetBookmarkCollectionResponse::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// UpdateBookmarkCollectionRequest

// string BookmarkCollection_id = 1;
inline void UpdateBookmarkCollectionRequest::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& UpdateBookmarkCollectionRequest::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.UpdateBookmarkCollectionRequest.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionRequest::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.UpdateBookmarkCollectionRequest.BookmarkCollection_id)
}
inline std::string* UpdateBookmarkCollectionRequest::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.UpdateBookmarkCollectionRequest.BookmarkCollection_id)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionRequest::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void UpdateBookmarkCollectionRequest::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.UpdateBookmarkCollectionRequest.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void UpdateBookmarkCollectionRequest::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.UpdateBookmarkCollectionRequest.BookmarkCollection_id)
}

// optional string name = 2;
inline bool UpdateBookmarkCollectionRequest::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UpdateBookmarkCollectionRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateBookmarkCollectionRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.UpdateBookmarkCollectionRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.UpdateBookmarkCollectionRequest.name)
}
inline std::string* UpdateBookmarkCollectionRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.UpdateBookmarkCollectionRequest.name)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void UpdateBookmarkCollectionRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.UpdateBookmarkCollectionRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UpdateBookmarkCollectionRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.UpdateBookmarkCollectionRequest.name)
}

// optional string description = 3;
inline bool UpdateBookmarkCollectionRequest::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UpdateBookmarkCollectionRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UpdateBookmarkCollectionRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.UpdateBookmarkCollectionRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.UpdateBookmarkCollectionRequest.description)
}
inline std::string* UpdateBookmarkCollectionRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.UpdateBookmarkCollectionRequest.description)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void UpdateBookmarkCollectionRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.UpdateBookmarkCollectionRequest.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UpdateBookmarkCollectionRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.UpdateBookmarkCollectionRequest.description)
}

// -------------------------------------------------------------------

// UpdateBookmarkCollectionResponse

// string BookmarkCollection_id = 1;
inline void UpdateBookmarkCollectionResponse::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& UpdateBookmarkCollectionResponse::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.UpdateBookmarkCollectionResponse.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionResponse::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.UpdateBookmarkCollectionResponse.BookmarkCollection_id)
}
inline std::string* UpdateBookmarkCollectionResponse::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.UpdateBookmarkCollectionResponse.BookmarkCollection_id)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionResponse::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void UpdateBookmarkCollectionResponse::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionResponse::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionResponse::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.UpdateBookmarkCollectionResponse.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void UpdateBookmarkCollectionResponse::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.UpdateBookmarkCollectionResponse.BookmarkCollection_id)
}

// string status = 2;
inline void UpdateBookmarkCollectionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& UpdateBookmarkCollectionResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.UpdateBookmarkCollectionResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.UpdateBookmarkCollectionResponse.status)
}
inline std::string* UpdateBookmarkCollectionResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.UpdateBookmarkCollectionResponse.status)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void UpdateBookmarkCollectionResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.UpdateBookmarkCollectionResponse.status)
  return _impl_.status_.Release();
}
inline void UpdateBookmarkCollectionResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.UpdateBookmarkCollectionResponse.status)
}

// -------------------------------------------------------------------

// DeleteBookmarkCollectionRequest

// string BookmarkCollection_id = 1;
inline void DeleteBookmarkCollectionRequest::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionRequest::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.DeleteBookmarkCollectionRequest.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionRequest::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.DeleteBookmarkCollectionRequest.BookmarkCollection_id)
}
inline std::string* DeleteBookmarkCollectionRequest::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.DeleteBookmarkCollectionRequest.BookmarkCollection_id)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionRequest::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void DeleteBookmarkCollectionRequest::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionRequest::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionRequest::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.DeleteBookmarkCollectionRequest.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void DeleteBookmarkCollectionRequest::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.DeleteBookmarkCollectionRequest.BookmarkCollection_id)
}

// -------------------------------------------------------------------

// DeleteBookmarkCollectionResponse

// string BookmarkCollection_id = 1;
inline void DeleteBookmarkCollectionResponse::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionResponse::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.DeleteBookmarkCollectionResponse.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionResponse::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.DeleteBookmarkCollectionResponse.BookmarkCollection_id)
}
inline std::string* DeleteBookmarkCollectionResponse::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.DeleteBookmarkCollectionResponse.BookmarkCollection_id)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionResponse::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void DeleteBookmarkCollectionResponse::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionResponse::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionResponse::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.DeleteBookmarkCollectionResponse.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void DeleteBookmarkCollectionResponse::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.DeleteBookmarkCollectionResponse.BookmarkCollection_id)
}

// string message = 2;
inline void DeleteBookmarkCollectionResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.DeleteBookmarkCollectionResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.DeleteBookmarkCollectionResponse.message)
}
inline std::string* DeleteBookmarkCollectionResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.DeleteBookmarkCollectionResponse.message)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void DeleteBookmarkCollectionResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.DeleteBookmarkCollectionResponse.message)
  return _impl_.message_.Release();
}
inline void DeleteBookmarkCollectionResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.DeleteBookmarkCollectionResponse.message)
}

// -------------------------------------------------------------------

// ListBookmarkCollectionsRequest

// uint32 page = 1;
inline void ListBookmarkCollectionsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionsRequest::page() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionsRequest.page)
  return _internal_page();
}
inline void ListBookmarkCollectionsRequest::set_page(::uint32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionsRequest.page)
}
inline ::uint32_t ListBookmarkCollectionsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListBookmarkCollectionsRequest::_internal_set_page(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// uint32 page_size = 2;
inline void ListBookmarkCollectionsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionsRequest.page_size)
  return _internal_page_size();
}
inline void ListBookmarkCollectionsRequest::set_page_size(::uint32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionsRequest.page_size)
}
inline ::uint32_t ListBookmarkCollectionsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListBookmarkCollectionsRequest::_internal_set_page_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// BookmarkCollection

// string BookmarkCollection_id = 1;
inline void BookmarkCollection::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& BookmarkCollection::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollection.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollection::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollection.BookmarkCollection_id)
}
inline std::string* BookmarkCollection::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollection.BookmarkCollection_id)
  return _s;
}
inline const std::string& BookmarkCollection::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void BookmarkCollection::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* BookmarkCollection::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* BookmarkCollection::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollection.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void BookmarkCollection::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollection.BookmarkCollection_id)
}

// string name = 2;
inline void BookmarkCollection::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& BookmarkCollection::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollection.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollection::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollection.name)
}
inline std::string* BookmarkCollection::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollection.name)
  return _s;
}
inline const std::string& BookmarkCollection::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BookmarkCollection::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* BookmarkCollection::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* BookmarkCollection::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollection.name)
  return _impl_.name_.Release();
}
inline void BookmarkCollection::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollection.name)
}

// string description = 3;
inline void BookmarkCollection::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& BookmarkCollection::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollection.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollection::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollection.description)
}
inline std::string* BookmarkCollection::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollection.description)
  return _s;
}
inline const std::string& BookmarkCollection::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void BookmarkCollection::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* BookmarkCollection::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* BookmarkCollection::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollection.description)
  return _impl_.description_.Release();
}
inline void BookmarkCollection::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollection.description)
}

// string created_at = 4;
inline void BookmarkCollection::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& BookmarkCollection::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollection.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollection::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollection.created_at)
}
inline std::string* BookmarkCollection::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollection.created_at)
  return _s;
}
inline const std::string& BookmarkCollection::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void BookmarkCollection::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* BookmarkCollection::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* BookmarkCollection::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollection.created_at)
  return _impl_.created_at_.Release();
}
inline void BookmarkCollection::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_at_.IsDefault()) {
          _impl_.created_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollection.created_at)
}

// string updated_at = 5;
inline void BookmarkCollection::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& BookmarkCollection::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.BookmarkCollection.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BookmarkCollection::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.BookmarkCollection.updated_at)
}
inline std::string* BookmarkCollection::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.BookmarkCollection.updated_at)
  return _s;
}
inline const std::string& BookmarkCollection::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void BookmarkCollection::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* BookmarkCollection::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* BookmarkCollection::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.BookmarkCollection.updated_at)
  return _impl_.updated_at_.Release();
}
inline void BookmarkCollection::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updated_at_.IsDefault()) {
          _impl_.updated_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.BookmarkCollection.updated_at)
}

// -------------------------------------------------------------------

// ListBookmarkCollectionsResponse

// repeated .BookmarkCollection.BookmarkCollection BookmarkCollections = 1;
inline int ListBookmarkCollectionsResponse::_internal_bookmarkcollections_size() const {
  return _internal_bookmarkcollections().size();
}
inline int ListBookmarkCollectionsResponse::bookmarkcollections_size() const {
  return _internal_bookmarkcollections_size();
}
inline void ListBookmarkCollectionsResponse::clear_bookmarkcollections() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollections_.Clear();
}
inline ::BookmarkCollection::BookmarkCollection* ListBookmarkCollectionsResponse::mutable_bookmarkcollections(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.ListBookmarkCollectionsResponse.BookmarkCollections)
  return _internal_mutable_bookmarkcollections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>* ListBookmarkCollectionsResponse::mutable_bookmarkcollections()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BookmarkCollection.ListBookmarkCollectionsResponse.BookmarkCollections)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bookmarkcollections();
}
inline const ::BookmarkCollection::BookmarkCollection& ListBookmarkCollectionsResponse::bookmarkcollections(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionsResponse.BookmarkCollections)
  return _internal_bookmarkcollections().Get(index);
}
inline ::BookmarkCollection::BookmarkCollection* ListBookmarkCollectionsResponse::add_bookmarkcollections() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BookmarkCollection::BookmarkCollection* _add = _internal_mutable_bookmarkcollections()->Add();
  // @@protoc_insertion_point(field_add:BookmarkCollection.ListBookmarkCollectionsResponse.BookmarkCollections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>& ListBookmarkCollectionsResponse::bookmarkcollections() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BookmarkCollection.ListBookmarkCollectionsResponse.BookmarkCollections)
  return _internal_bookmarkcollections();
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>&
ListBookmarkCollectionsResponse::_internal_bookmarkcollections() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollections_;
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollection>*
ListBookmarkCollectionsResponse::_internal_mutable_bookmarkcollections() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bookmarkcollections_;
}

// uint32 total_count = 2;
inline void ListBookmarkCollectionsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionsResponse.total_count)
  return _internal_total_count();
}
inline void ListBookmarkCollectionsResponse::set_total_count(::uint32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionsResponse.total_count)
}
inline ::uint32_t ListBookmarkCollectionsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListBookmarkCollectionsResponse::_internal_set_total_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// ListBookmarkCollectionEntryRequest

// string BookmarkCollection_id = 1;
inline void ListBookmarkCollectionEntryRequest::clear_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.ClearToEmpty();
}
inline const std::string& ListBookmarkCollectionEntryRequest::bookmarkcollection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionEntryRequest.BookmarkCollection_id)
  return _internal_bookmarkcollection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListBookmarkCollectionEntryRequest::set_bookmarkcollection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionEntryRequest.BookmarkCollection_id)
}
inline std::string* ListBookmarkCollectionEntryRequest::mutable_bookmarkcollection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmarkcollection_id();
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.ListBookmarkCollectionEntryRequest.BookmarkCollection_id)
  return _s;
}
inline const std::string& ListBookmarkCollectionEntryRequest::_internal_bookmarkcollection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_id_.Get();
}
inline void ListBookmarkCollectionEntryRequest::_internal_set_bookmarkcollection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.Set(value, GetArena());
}
inline std::string* ListBookmarkCollectionEntryRequest::_internal_mutable_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmarkcollection_id_.Mutable( GetArena());
}
inline std::string* ListBookmarkCollectionEntryRequest::release_bookmarkcollection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BookmarkCollection.ListBookmarkCollectionEntryRequest.BookmarkCollection_id)
  return _impl_.bookmarkcollection_id_.Release();
}
inline void ListBookmarkCollectionEntryRequest::set_allocated_bookmarkcollection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmarkcollection_id_.IsDefault()) {
          _impl_.bookmarkcollection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BookmarkCollection.ListBookmarkCollectionEntryRequest.BookmarkCollection_id)
}

// uint32 page = 4;
inline void ListBookmarkCollectionEntryRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionEntryRequest::page() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionEntryRequest.page)
  return _internal_page();
}
inline void ListBookmarkCollectionEntryRequest::set_page(::uint32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionEntryRequest.page)
}
inline ::uint32_t ListBookmarkCollectionEntryRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListBookmarkCollectionEntryRequest::_internal_set_page(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// uint32 page_size = 5;
inline void ListBookmarkCollectionEntryRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionEntryRequest::page_size() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionEntryRequest.page_size)
  return _internal_page_size();
}
inline void ListBookmarkCollectionEntryRequest::set_page_size(::uint32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionEntryRequest.page_size)
}
inline ::uint32_t ListBookmarkCollectionEntryRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListBookmarkCollectionEntryRequest::_internal_set_page_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// ListBookmarkCollectionEntryResponse

// repeated .BookmarkCollection.BookmarkCollectionEntries BookmarkCollection_entries = 1;
inline int ListBookmarkCollectionEntryResponse::_internal_bookmarkcollection_entries_size() const {
  return _internal_bookmarkcollection_entries().size();
}
inline int ListBookmarkCollectionEntryResponse::bookmarkcollection_entries_size() const {
  return _internal_bookmarkcollection_entries_size();
}
inline void ListBookmarkCollectionEntryResponse::clear_bookmarkcollection_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmarkcollection_entries_.Clear();
}
inline ::BookmarkCollection::BookmarkCollectionEntries* ListBookmarkCollectionEntryResponse::mutable_bookmarkcollection_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BookmarkCollection.ListBookmarkCollectionEntryResponse.BookmarkCollection_entries)
  return _internal_mutable_bookmarkcollection_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>* ListBookmarkCollectionEntryResponse::mutable_bookmarkcollection_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BookmarkCollection.ListBookmarkCollectionEntryResponse.BookmarkCollection_entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bookmarkcollection_entries();
}
inline const ::BookmarkCollection::BookmarkCollectionEntries& ListBookmarkCollectionEntryResponse::bookmarkcollection_entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionEntryResponse.BookmarkCollection_entries)
  return _internal_bookmarkcollection_entries().Get(index);
}
inline ::BookmarkCollection::BookmarkCollectionEntries* ListBookmarkCollectionEntryResponse::add_bookmarkcollection_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BookmarkCollection::BookmarkCollectionEntries* _add = _internal_mutable_bookmarkcollection_entries()->Add();
  // @@protoc_insertion_point(field_add:BookmarkCollection.ListBookmarkCollectionEntryResponse.BookmarkCollection_entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>& ListBookmarkCollectionEntryResponse::bookmarkcollection_entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BookmarkCollection.ListBookmarkCollectionEntryResponse.BookmarkCollection_entries)
  return _internal_bookmarkcollection_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>&
ListBookmarkCollectionEntryResponse::_internal_bookmarkcollection_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmarkcollection_entries_;
}
inline ::google::protobuf::RepeatedPtrField<::BookmarkCollection::BookmarkCollectionEntries>*
ListBookmarkCollectionEntryResponse::_internal_mutable_bookmarkcollection_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bookmarkcollection_entries_;
}

// uint32 total_count = 2;
inline void ListBookmarkCollectionEntryResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0u;
}
inline ::uint32_t ListBookmarkCollectionEntryResponse::total_count() const {
  // @@protoc_insertion_point(field_get:BookmarkCollection.ListBookmarkCollectionEntryResponse.total_count)
  return _internal_total_count();
}
inline void ListBookmarkCollectionEntryResponse::set_total_count(::uint32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:BookmarkCollection.ListBookmarkCollectionEntryResponse.total_count)
}
inline ::uint32_t ListBookmarkCollectionEntryResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListBookmarkCollectionEntryResponse::_internal_set_total_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace BookmarkCollection


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollections_2eproto_2epb_2eh
