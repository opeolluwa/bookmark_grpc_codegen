// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bookmark_collection_entries.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollection_5fentries_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollection_5fentries_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bookmark_5fcollection_5fentries_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bookmark_5fcollection_5fentries_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bookmark_5fcollection_5fentries_2eproto;
namespace bookmark_collections_entries {
class DeleteBookmarkCollectionsEntryResponse;
struct DeleteBookmarkCollectionsEntryResponseDefaultTypeInternal;
extern DeleteBookmarkCollectionsEntryResponseDefaultTypeInternal _DeleteBookmarkCollectionsEntryResponse_default_instance_;
class GetBookmarkCollectionsEntryRequest;
struct GetBookmarkCollectionsEntryRequestDefaultTypeInternal;
extern GetBookmarkCollectionsEntryRequestDefaultTypeInternal _GetBookmarkCollectionsEntryRequest_default_instance_;
class GetBookmarkCollectionsEntryResponse;
struct GetBookmarkCollectionsEntryResponseDefaultTypeInternal;
extern GetBookmarkCollectionsEntryResponseDefaultTypeInternal _GetBookmarkCollectionsEntryResponse_default_instance_;
class GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse;
struct GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUseDefaultTypeInternal;
extern GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUseDefaultTypeInternal _GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse_default_instance_;
class NewBookmarkCollectionsEntryRequest;
struct NewBookmarkCollectionsEntryRequestDefaultTypeInternal;
extern NewBookmarkCollectionsEntryRequestDefaultTypeInternal _NewBookmarkCollectionsEntryRequest_default_instance_;
class NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse;
struct NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUseDefaultTypeInternal;
extern NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUseDefaultTypeInternal _NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse_default_instance_;
class UpdateBookmarkCollectionsEntryRequest;
struct UpdateBookmarkCollectionsEntryRequestDefaultTypeInternal;
extern UpdateBookmarkCollectionsEntryRequestDefaultTypeInternal _UpdateBookmarkCollectionsEntryRequest_default_instance_;
}  // namespace bookmark_collections_entries
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace bookmark_collections_entries {

// ===================================================================


// -------------------------------------------------------------------

class UpdateBookmarkCollectionsEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest) */ {
 public:
  inline UpdateBookmarkCollectionsEntryRequest() : UpdateBookmarkCollectionsEntryRequest(nullptr) {}
  ~UpdateBookmarkCollectionsEntryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBookmarkCollectionsEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBookmarkCollectionsEntryRequest(const UpdateBookmarkCollectionsEntryRequest& from) : UpdateBookmarkCollectionsEntryRequest(nullptr, from) {}
  inline UpdateBookmarkCollectionsEntryRequest(UpdateBookmarkCollectionsEntryRequest&& from) noexcept
      : UpdateBookmarkCollectionsEntryRequest(nullptr, std::move(from)) {}
  inline UpdateBookmarkCollectionsEntryRequest& operator=(const UpdateBookmarkCollectionsEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBookmarkCollectionsEntryRequest& operator=(UpdateBookmarkCollectionsEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBookmarkCollectionsEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBookmarkCollectionsEntryRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBookmarkCollectionsEntryRequest*>(
        &_UpdateBookmarkCollectionsEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UpdateBookmarkCollectionsEntryRequest& a, UpdateBookmarkCollectionsEntryRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBookmarkCollectionsEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBookmarkCollectionsEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBookmarkCollectionsEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBookmarkCollectionsEntryRequest& from) { UpdateBookmarkCollectionsEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateBookmarkCollectionsEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest"; }

 protected:
  explicit UpdateBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena);
  UpdateBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, const UpdateBookmarkCollectionsEntryRequest& from);
  UpdateBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, UpdateBookmarkCollectionsEntryRequest&& from) noexcept
      : UpdateBookmarkCollectionsEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCollectionIdFieldNumber = 1,
    kTitleFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kEntryIdFieldNumber = 4,
  };
  // string collection_id = 1;
  void clear_collection_id() ;
  const std::string& collection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_collection_id(Arg_&& arg, Args_... args);
  std::string* mutable_collection_id();
  PROTOBUF_NODISCARD std::string* release_collection_id();
  void set_allocated_collection_id(std::string* value);

  private:
  const std::string& _internal_collection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_collection_id(
      const std::string& value);
  std::string* _internal_mutable_collection_id();

  public:
  // optional string title = 2;
  bool has_title() const;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // optional string description = 3;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string entry_id = 4;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* value);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // @@protoc_insertion_point(class_scope:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      112, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateBookmarkCollectionsEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBookmarkCollectionsEntryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr collection_id_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse*>(
        &_NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      96, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse*>(
        &_GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      97, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class GetBookmarkCollectionsEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest) */ {
 public:
  inline GetBookmarkCollectionsEntryRequest() : GetBookmarkCollectionsEntryRequest(nullptr) {}
  ~GetBookmarkCollectionsEntryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBookmarkCollectionsEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBookmarkCollectionsEntryRequest(const GetBookmarkCollectionsEntryRequest& from) : GetBookmarkCollectionsEntryRequest(nullptr, from) {}
  inline GetBookmarkCollectionsEntryRequest(GetBookmarkCollectionsEntryRequest&& from) noexcept
      : GetBookmarkCollectionsEntryRequest(nullptr, std::move(from)) {}
  inline GetBookmarkCollectionsEntryRequest& operator=(const GetBookmarkCollectionsEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBookmarkCollectionsEntryRequest& operator=(GetBookmarkCollectionsEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBookmarkCollectionsEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBookmarkCollectionsEntryRequest* internal_default_instance() {
    return reinterpret_cast<const GetBookmarkCollectionsEntryRequest*>(
        &_GetBookmarkCollectionsEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetBookmarkCollectionsEntryRequest& a, GetBookmarkCollectionsEntryRequest& b) { a.Swap(&b); }
  inline void Swap(GetBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBookmarkCollectionsEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBookmarkCollectionsEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBookmarkCollectionsEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBookmarkCollectionsEntryRequest& from) { GetBookmarkCollectionsEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBookmarkCollectionsEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "bookmark_collections_entries.GetBookmarkCollectionsEntryRequest"; }

 protected:
  explicit GetBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena);
  GetBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, const GetBookmarkCollectionsEntryRequest& from);
  GetBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, GetBookmarkCollectionsEntryRequest&& from) noexcept
      : GetBookmarkCollectionsEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCollectionIdFieldNumber = 1,
    kEntryIdFieldNumber = 2,
  };
  // string collection_id = 1;
  void clear_collection_id() ;
  const std::string& collection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_collection_id(Arg_&& arg, Args_... args);
  std::string* mutable_collection_id();
  PROTOBUF_NODISCARD std::string* release_collection_id();
  void set_allocated_collection_id(std::string* value);

  private:
  const std::string& _internal_collection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_collection_id(
      const std::string& value);
  std::string* _internal_mutable_collection_id();

  public:
  // string entry_id = 2;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* value);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // @@protoc_insertion_point(class_scope:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      93, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBookmarkCollectionsEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBookmarkCollectionsEntryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr collection_id_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class DeleteBookmarkCollectionsEntryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse) */ {
 public:
  inline DeleteBookmarkCollectionsEntryResponse() : DeleteBookmarkCollectionsEntryResponse(nullptr) {}
  ~DeleteBookmarkCollectionsEntryResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBookmarkCollectionsEntryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteBookmarkCollectionsEntryResponse(const DeleteBookmarkCollectionsEntryResponse& from) : DeleteBookmarkCollectionsEntryResponse(nullptr, from) {}
  inline DeleteBookmarkCollectionsEntryResponse(DeleteBookmarkCollectionsEntryResponse&& from) noexcept
      : DeleteBookmarkCollectionsEntryResponse(nullptr, std::move(from)) {}
  inline DeleteBookmarkCollectionsEntryResponse& operator=(const DeleteBookmarkCollectionsEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBookmarkCollectionsEntryResponse& operator=(DeleteBookmarkCollectionsEntryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBookmarkCollectionsEntryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBookmarkCollectionsEntryResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteBookmarkCollectionsEntryResponse*>(
        &_DeleteBookmarkCollectionsEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DeleteBookmarkCollectionsEntryResponse& a, DeleteBookmarkCollectionsEntryResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteBookmarkCollectionsEntryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBookmarkCollectionsEntryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBookmarkCollectionsEntryResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteBookmarkCollectionsEntryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBookmarkCollectionsEntryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteBookmarkCollectionsEntryResponse& from) { DeleteBookmarkCollectionsEntryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteBookmarkCollectionsEntryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse"; }

 protected:
  explicit DeleteBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena);
  DeleteBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena, const DeleteBookmarkCollectionsEntryResponse& from);
  DeleteBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena, DeleteBookmarkCollectionsEntryResponse&& from) noexcept
      : DeleteBookmarkCollectionsEntryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCollectionIdFieldNumber = 1,
    kEntryIdFieldNumber = 2,
    kStatusFieldNumber = 4,
  };
  // string collection_id = 1;
  void clear_collection_id() ;
  const std::string& collection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_collection_id(Arg_&& arg, Args_... args);
  std::string* mutable_collection_id();
  PROTOBUF_NODISCARD std::string* release_collection_id();
  void set_allocated_collection_id(std::string* value);

  private:
  const std::string& _internal_collection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_collection_id(
      const std::string& value);
  std::string* _internal_mutable_collection_id();

  public:
  // string entry_id = 2;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* value);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // string status = 4;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      103, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteBookmarkCollectionsEntryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteBookmarkCollectionsEntryResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr collection_id_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class NewBookmarkCollectionsEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest) */ {
 public:
  inline NewBookmarkCollectionsEntryRequest() : NewBookmarkCollectionsEntryRequest(nullptr) {}
  ~NewBookmarkCollectionsEntryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewBookmarkCollectionsEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewBookmarkCollectionsEntryRequest(const NewBookmarkCollectionsEntryRequest& from) : NewBookmarkCollectionsEntryRequest(nullptr, from) {}
  inline NewBookmarkCollectionsEntryRequest(NewBookmarkCollectionsEntryRequest&& from) noexcept
      : NewBookmarkCollectionsEntryRequest(nullptr, std::move(from)) {}
  inline NewBookmarkCollectionsEntryRequest& operator=(const NewBookmarkCollectionsEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewBookmarkCollectionsEntryRequest& operator=(NewBookmarkCollectionsEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewBookmarkCollectionsEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewBookmarkCollectionsEntryRequest* internal_default_instance() {
    return reinterpret_cast<const NewBookmarkCollectionsEntryRequest*>(
        &_NewBookmarkCollectionsEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NewBookmarkCollectionsEntryRequest& a, NewBookmarkCollectionsEntryRequest& b) { a.Swap(&b); }
  inline void Swap(NewBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewBookmarkCollectionsEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewBookmarkCollectionsEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewBookmarkCollectionsEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewBookmarkCollectionsEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewBookmarkCollectionsEntryRequest& from) { NewBookmarkCollectionsEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewBookmarkCollectionsEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "bookmark_collections_entries.NewBookmarkCollectionsEntryRequest"; }

 protected:
  explicit NewBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena);
  NewBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, const NewBookmarkCollectionsEntryRequest& from);
  NewBookmarkCollectionsEntryRequest(::google::protobuf::Arena* arena, NewBookmarkCollectionsEntryRequest&& from) noexcept
      : NewBookmarkCollectionsEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMoreFieldsFieldNumber = 4,
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kBookmarkCollectionIdFieldNumber = 3,
  };
  // map<string, string> more_fields = 4;
  int more_fields_size() const;
  private:
  int _internal_more_fields_size() const;

  public:
  void clear_more_fields() ;
  const ::google::protobuf::Map<std::string, std::string>& more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_more_fields();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_more_fields();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string bookmark_collection_id = 3;
  void clear_bookmark_collection_id() ;
  const std::string& bookmark_collection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bookmark_collection_id(Arg_&& arg, Args_... args);
  std::string* mutable_bookmark_collection_id();
  PROTOBUF_NODISCARD std::string* release_bookmark_collection_id();
  void set_allocated_bookmark_collection_id(std::string* value);

  private:
  const std::string& _internal_bookmark_collection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bookmark_collection_id(
      const std::string& value);
  std::string* _internal_mutable_bookmark_collection_id();

  public:
  // @@protoc_insertion_point(class_scope:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      121, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewBookmarkCollectionsEntryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewBookmarkCollectionsEntryRequest& from_msg);
    ::google::protobuf::internal::MapField<NewBookmarkCollectionsEntryRequest_MoreFieldsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        more_fields_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr bookmark_collection_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};
// -------------------------------------------------------------------

class GetBookmarkCollectionsEntryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse) */ {
 public:
  inline GetBookmarkCollectionsEntryResponse() : GetBookmarkCollectionsEntryResponse(nullptr) {}
  ~GetBookmarkCollectionsEntryResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBookmarkCollectionsEntryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBookmarkCollectionsEntryResponse(const GetBookmarkCollectionsEntryResponse& from) : GetBookmarkCollectionsEntryResponse(nullptr, from) {}
  inline GetBookmarkCollectionsEntryResponse(GetBookmarkCollectionsEntryResponse&& from) noexcept
      : GetBookmarkCollectionsEntryResponse(nullptr, std::move(from)) {}
  inline GetBookmarkCollectionsEntryResponse& operator=(const GetBookmarkCollectionsEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBookmarkCollectionsEntryResponse& operator=(GetBookmarkCollectionsEntryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBookmarkCollectionsEntryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBookmarkCollectionsEntryResponse* internal_default_instance() {
    return reinterpret_cast<const GetBookmarkCollectionsEntryResponse*>(
        &_GetBookmarkCollectionsEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetBookmarkCollectionsEntryResponse& a, GetBookmarkCollectionsEntryResponse& b) { a.Swap(&b); }
  inline void Swap(GetBookmarkCollectionsEntryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBookmarkCollectionsEntryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBookmarkCollectionsEntryResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBookmarkCollectionsEntryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBookmarkCollectionsEntryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBookmarkCollectionsEntryResponse& from) { GetBookmarkCollectionsEntryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBookmarkCollectionsEntryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "bookmark_collections_entries.GetBookmarkCollectionsEntryResponse"; }

 protected:
  explicit GetBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena);
  GetBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena, const GetBookmarkCollectionsEntryResponse& from);
  GetBookmarkCollectionsEntryResponse(::google::protobuf::Arena* arena, GetBookmarkCollectionsEntryResponse&& from) noexcept
      : GetBookmarkCollectionsEntryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMoreFieldsFieldNumber = 6,
    kTitleFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kCollectionIdFieldNumber = 5,
    kEntryIdFieldNumber = 8,
  };
  // map<string, string> more_fields = 6;
  int more_fields_size() const;
  private:
  int _internal_more_fields_size() const;

  public:
  void clear_more_fields() ;
  const ::google::protobuf::Map<std::string, std::string>& more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_more_fields();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_more_fields() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_more_fields();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_at = 3;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 4;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // string collection_id = 5;
  void clear_collection_id() ;
  const std::string& collection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_collection_id(Arg_&& arg, Args_... args);
  std::string* mutable_collection_id();
  PROTOBUF_NODISCARD std::string* release_collection_id();
  void set_allocated_collection_id(std::string* value);

  private:
  const std::string& _internal_collection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_collection_id(
      const std::string& value);
  std::string* _internal_mutable_collection_id();

  public:
  // string entry_id = 8;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* value);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // @@protoc_insertion_point(class_scope:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      141, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBookmarkCollectionsEntryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBookmarkCollectionsEntryResponse& from_msg);
    ::google::protobuf::internal::MapField<GetBookmarkCollectionsEntryResponse_MoreFieldsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        more_fields_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::google::protobuf::internal::ArenaStringPtr collection_id_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bookmark_5fcollection_5fentries_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NewBookmarkCollectionsEntryRequest

// string title = 1;
inline void NewBookmarkCollectionsEntryRequest::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionsEntryRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionsEntryRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.title)
}
inline std::string* NewBookmarkCollectionsEntryRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.title)
  return _s;
}
inline const std::string& NewBookmarkCollectionsEntryRequest::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void NewBookmarkCollectionsEntryRequest::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.title)
  return _impl_.title_.Release();
}
inline void NewBookmarkCollectionsEntryRequest::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.title)
}

// string description = 2;
inline void NewBookmarkCollectionsEntryRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionsEntryRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionsEntryRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.description)
}
inline std::string* NewBookmarkCollectionsEntryRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.description)
  return _s;
}
inline const std::string& NewBookmarkCollectionsEntryRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void NewBookmarkCollectionsEntryRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.description)
  return _impl_.description_.Release();
}
inline void NewBookmarkCollectionsEntryRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.description)
}

// string bookmark_collection_id = 3;
inline void NewBookmarkCollectionsEntryRequest::clear_bookmark_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmark_collection_id_.ClearToEmpty();
}
inline const std::string& NewBookmarkCollectionsEntryRequest::bookmark_collection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.bookmark_collection_id)
  return _internal_bookmark_collection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewBookmarkCollectionsEntryRequest::set_bookmark_collection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmark_collection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.bookmark_collection_id)
}
inline std::string* NewBookmarkCollectionsEntryRequest::mutable_bookmark_collection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bookmark_collection_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.bookmark_collection_id)
  return _s;
}
inline const std::string& NewBookmarkCollectionsEntryRequest::_internal_bookmark_collection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bookmark_collection_id_.Get();
}
inline void NewBookmarkCollectionsEntryRequest::_internal_set_bookmark_collection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmark_collection_id_.Set(value, GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::_internal_mutable_bookmark_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bookmark_collection_id_.Mutable( GetArena());
}
inline std::string* NewBookmarkCollectionsEntryRequest::release_bookmark_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.bookmark_collection_id)
  return _impl_.bookmark_collection_id_.Release();
}
inline void NewBookmarkCollectionsEntryRequest::set_allocated_bookmark_collection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bookmark_collection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bookmark_collection_id_.IsDefault()) {
          _impl_.bookmark_collection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.bookmark_collection_id)
}

// map<string, string> more_fields = 4;
inline int NewBookmarkCollectionsEntryRequest::_internal_more_fields_size() const {
  return _internal_more_fields().size();
}
inline int NewBookmarkCollectionsEntryRequest::more_fields_size() const {
  return _internal_more_fields_size();
}
inline void NewBookmarkCollectionsEntryRequest::clear_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_fields_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& NewBookmarkCollectionsEntryRequest::_internal_more_fields() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.more_fields_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& NewBookmarkCollectionsEntryRequest::more_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.more_fields)
  return _internal_more_fields();
}
inline ::google::protobuf::Map<std::string, std::string>* NewBookmarkCollectionsEntryRequest::_internal_mutable_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.more_fields_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* NewBookmarkCollectionsEntryRequest::mutable_more_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bookmark_collections_entries.NewBookmarkCollectionsEntryRequest.more_fields)
  return _internal_mutable_more_fields();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBookmarkCollectionsEntryResponse

// string title = 1;
inline void GetBookmarkCollectionsEntryResponse::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.title)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.title)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.title)
  return _impl_.title_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.title)
}

// string description = 2;
inline void GetBookmarkCollectionsEntryResponse::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.description)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.description)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.description)
  return _impl_.description_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.description)
}

// string created_at = 3;
inline void GetBookmarkCollectionsEntryResponse::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.created_at)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.created_at)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.created_at)
  return _impl_.created_at_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_at_.IsDefault()) {
          _impl_.created_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.created_at)
}

// string updated_at = 4;
inline void GetBookmarkCollectionsEntryResponse::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.updated_at)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.updated_at)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.updated_at)
  return _impl_.updated_at_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updated_at_.IsDefault()) {
          _impl_.updated_at_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.updated_at)
}

// string collection_id = 5;
inline void GetBookmarkCollectionsEntryResponse::clear_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::collection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.collection_id)
  return _internal_collection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_collection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.collection_id)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_collection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_collection_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.collection_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_collection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collection_id_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_collection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.collection_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.collection_id)
  return _impl_.collection_id_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_collection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.collection_id_.IsDefault()) {
          _impl_.collection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.collection_id)
}

// map<string, string> more_fields = 6;
inline int GetBookmarkCollectionsEntryResponse::_internal_more_fields_size() const {
  return _internal_more_fields().size();
}
inline int GetBookmarkCollectionsEntryResponse::more_fields_size() const {
  return _internal_more_fields_size();
}
inline void GetBookmarkCollectionsEntryResponse::clear_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_fields_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBookmarkCollectionsEntryResponse::_internal_more_fields() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.more_fields_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetBookmarkCollectionsEntryResponse::more_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.more_fields)
  return _internal_more_fields();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBookmarkCollectionsEntryResponse::_internal_mutable_more_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.more_fields_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetBookmarkCollectionsEntryResponse::mutable_more_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.more_fields)
  return _internal_mutable_more_fields();
}

// string entry_id = 8;
inline void GetBookmarkCollectionsEntryResponse::clear_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryResponse::entry_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryResponse::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.entry_id)
}
inline std::string* GetBookmarkCollectionsEntryResponse::mutable_entry_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.entry_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryResponse::_internal_entry_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_id_.Get();
}
inline void GetBookmarkCollectionsEntryResponse::_internal_set_entry_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::_internal_mutable_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryResponse::release_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.entry_id)
  return _impl_.entry_id_.Release();
}
inline void GetBookmarkCollectionsEntryResponse::set_allocated_entry_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryResponse.entry_id)
}

// -------------------------------------------------------------------

// GetBookmarkCollectionsEntryRequest

// string collection_id = 1;
inline void GetBookmarkCollectionsEntryRequest::clear_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryRequest::collection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.collection_id)
  return _internal_collection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryRequest::set_collection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.collection_id)
}
inline std::string* GetBookmarkCollectionsEntryRequest::mutable_collection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_collection_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.collection_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryRequest::_internal_collection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collection_id_.Get();
}
inline void GetBookmarkCollectionsEntryRequest::_internal_set_collection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryRequest::_internal_mutable_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.collection_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryRequest::release_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.collection_id)
  return _impl_.collection_id_.Release();
}
inline void GetBookmarkCollectionsEntryRequest::set_allocated_collection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.collection_id_.IsDefault()) {
          _impl_.collection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.collection_id)
}

// string entry_id = 2;
inline void GetBookmarkCollectionsEntryRequest::clear_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& GetBookmarkCollectionsEntryRequest::entry_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBookmarkCollectionsEntryRequest::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.entry_id)
}
inline std::string* GetBookmarkCollectionsEntryRequest::mutable_entry_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.entry_id)
  return _s;
}
inline const std::string& GetBookmarkCollectionsEntryRequest::_internal_entry_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_id_.Get();
}
inline void GetBookmarkCollectionsEntryRequest::_internal_set_entry_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(value, GetArena());
}
inline std::string* GetBookmarkCollectionsEntryRequest::_internal_mutable_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_id_.Mutable( GetArena());
}
inline std::string* GetBookmarkCollectionsEntryRequest::release_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.entry_id)
  return _impl_.entry_id_.Release();
}
inline void GetBookmarkCollectionsEntryRequest::set_allocated_entry_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.GetBookmarkCollectionsEntryRequest.entry_id)
}

// -------------------------------------------------------------------

// UpdateBookmarkCollectionsEntryRequest

// string collection_id = 1;
inline void UpdateBookmarkCollectionsEntryRequest::clear_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.ClearToEmpty();
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::collection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.collection_id)
  return _internal_collection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionsEntryRequest::set_collection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.collection_id)
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::mutable_collection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_collection_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.collection_id)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::_internal_collection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collection_id_.Get();
}
inline void UpdateBookmarkCollectionsEntryRequest::_internal_set_collection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::_internal_mutable_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.collection_id_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::release_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.collection_id)
  return _impl_.collection_id_.Release();
}
inline void UpdateBookmarkCollectionsEntryRequest::set_allocated_collection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.collection_id_.IsDefault()) {
          _impl_.collection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.collection_id)
}

// optional string title = 2;
inline bool UpdateBookmarkCollectionsEntryRequest::has_title() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UpdateBookmarkCollectionsEntryRequest::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionsEntryRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.title)
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.title)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void UpdateBookmarkCollectionsEntryRequest::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.title)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.title_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UpdateBookmarkCollectionsEntryRequest::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.title)
}

// optional string description = 3;
inline bool UpdateBookmarkCollectionsEntryRequest::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UpdateBookmarkCollectionsEntryRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionsEntryRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.description)
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.description)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void UpdateBookmarkCollectionsEntryRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UpdateBookmarkCollectionsEntryRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.description)
}

// string entry_id = 4;
inline void UpdateBookmarkCollectionsEntryRequest::clear_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::entry_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateBookmarkCollectionsEntryRequest::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.entry_id)
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::mutable_entry_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.entry_id)
  return _s;
}
inline const std::string& UpdateBookmarkCollectionsEntryRequest::_internal_entry_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_id_.Get();
}
inline void UpdateBookmarkCollectionsEntryRequest::_internal_set_entry_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(value, GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::_internal_mutable_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_id_.Mutable( GetArena());
}
inline std::string* UpdateBookmarkCollectionsEntryRequest::release_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.entry_id)
  return _impl_.entry_id_.Release();
}
inline void UpdateBookmarkCollectionsEntryRequest::set_allocated_entry_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.UpdateBookmarkCollectionsEntryRequest.entry_id)
}

// -------------------------------------------------------------------

// DeleteBookmarkCollectionsEntryResponse

// string collection_id = 1;
inline void DeleteBookmarkCollectionsEntryResponse::clear_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::collection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.collection_id)
  return _internal_collection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionsEntryResponse::set_collection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.collection_id)
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::mutable_collection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_collection_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.collection_id)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::_internal_collection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collection_id_.Get();
}
inline void DeleteBookmarkCollectionsEntryResponse::_internal_set_collection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::_internal_mutable_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.collection_id_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::release_collection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.collection_id)
  return _impl_.collection_id_.Release();
}
inline void DeleteBookmarkCollectionsEntryResponse::set_allocated_collection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collection_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.collection_id_.IsDefault()) {
          _impl_.collection_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.collection_id)
}

// string entry_id = 2;
inline void DeleteBookmarkCollectionsEntryResponse::clear_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::entry_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionsEntryResponse::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.entry_id)
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::mutable_entry_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.entry_id)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::_internal_entry_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_id_.Get();
}
inline void DeleteBookmarkCollectionsEntryResponse::_internal_set_entry_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::_internal_mutable_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_id_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::release_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.entry_id)
  return _impl_.entry_id_.Release();
}
inline void DeleteBookmarkCollectionsEntryResponse::set_allocated_entry_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_id_.IsDefault()) {
          _impl_.entry_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.entry_id)
}

// string status = 4;
inline void DeleteBookmarkCollectionsEntryResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteBookmarkCollectionsEntryResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.status)
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.status)
  return _s;
}
inline const std::string& DeleteBookmarkCollectionsEntryResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void DeleteBookmarkCollectionsEntryResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* DeleteBookmarkCollectionsEntryResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.status)
  return _impl_.status_.Release();
}
inline void DeleteBookmarkCollectionsEntryResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bookmark_collections_entries.DeleteBookmarkCollectionsEntryResponse.status)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bookmark_collections_entries


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_bookmark_5fcollection_5fentries_2eproto_2epb_2eh
